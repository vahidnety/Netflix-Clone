[{
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/AppDelegate.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3663,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>@main class AppDelegate : <Type usr=\"c:objc(cs)UIResponder\">UIResponder<\/Type>, <Type usr=\"c:objc(pl)UIApplicationDelegate\">UIApplicationDelegate<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.main",
            "key.length" : 5,
            "key.offset" : 128
          }
        ],
        "key.bodylength" : 3471,
        "key.bodyoffset" : 189,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 153
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 21,
            "key.offset" : 166
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/AppDelegate.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@main<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>AppDelegate<\/decl.name> : <ref.class usr=\"c:objc(cs)UIResponder\">UIResponder<\/ref.class>, <ref.protocol usr=\"c:objc(pl)UIApplicationDelegate\">UIApplicationDelegate<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UIResponder"
          },
          {
            "key.name" : "UIApplicationDelegate"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 3527,
        "key.line" : 12,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "AppDelegate",
        "key.namelength" : 11,
        "key.nameoffset" : 140,
        "key.offset" : 134,
        "key.parsed_declaration" : "class AppDelegate: UIResponder, UIApplicationDelegate",
        "key.parsed_scope.end" : 82,
        "key.parsed_scope.start" : 12,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func application(_ application: <Type usr=\"c:objc(cs)UIApplication\">UIApplication<\/Type>, didFinishLaunchingWithOptions launchOptions: [<Type usr=\"c:objc(cs)UIApplication\">UIApplication<\/Type>.<Type usr=\"c:@T@UIApplicationLaunchOptionsKey\">LaunchOptionsKey<\/Type> : Any]?) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.bodylength" : 95,
            "key.bodyoffset" : 338,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/AppDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>application<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>application<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIApplication\">UIApplication<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>didFinishLaunchingWithOptions<\/decl.var.parameter.argument_label> <decl.var.parameter.name>launchOptions<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"c:objc(cs)UIApplication\">UIApplication<\/ref.class>.<ref.struct usr=\"c:@T@UIApplicationLaunchOptionsKey\">LaunchOptionsKey<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 237,
            "key.line" : 16,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "application(_:didFinishLaunchingWithOptions:)",
            "key.namelength" : 126,
            "key.nameoffset" : 202,
            "key.offset" : 197,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UIApplicationDelegate(im)application:didFinishLaunchingWithOptions:"
              }
            ],
            "key.parsed_declaration" : "func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 16,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)AppDelegate(im)application:configurationForConnectingSceneSession:options:\">application(_:configurationForConnecting:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)AppDelegate(im)application:didDiscardSceneSessions:\">application(_:didDiscardSceneSessions:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(AppDelegate) -> (UIApplication, [UIApplication.LaunchOptionsKey : Any]?) -> Bool",
            "key.typeusr" : "$s_29didFinishLaunchingWithOptionsSbSo13UIApplicationC_SDySo0f6LaunchE3KeyaypGSgtcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)AppDelegate(im)application:didFinishLaunchingWithOptions:"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 30,
            "key.name" : "MARK: UISceneSession Lifecycle",
            "key.offset" : 443
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func application(_ application: <Type usr=\"c:objc(cs)UIApplication\">UIApplication<\/Type>, configurationForConnecting connectingSceneSession: <Type usr=\"c:objc(cs)UISceneSession\">UISceneSession<\/Type>, options: <Type usr=\"c:objc(cs)UIScene\">UIScene<\/Type>.<Type usr=\"c:objc(cs)UISceneConnectionOptions\">ConnectionOptions<\/Type>) -&gt; <Type usr=\"c:objc(cs)UISceneConfiguration\">UISceneConfiguration<\/Type><\/Declaration>",
            "key.bodylength" : 258,
            "key.bodyoffset" : 654,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/AppDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>application<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>application<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIApplication\">UIApplication<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configurationForConnecting<\/decl.var.parameter.argument_label> <decl.var.parameter.name>connectingSceneSession<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UISceneSession\">UISceneSession<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIScene\">UIScene<\/ref.class>.<ref.class usr=\"c:objc(cs)UISceneConnectionOptions\">ConnectionOptions<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UISceneConfiguration\">UISceneConfiguration<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 434,
            "key.line" : 23,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "application(_:configurationForConnecting:options:)",
            "key.namelength" : 144,
            "key.nameoffset" : 484,
            "key.offset" : 479,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UIApplicationDelegate(im)application:configurationForConnectingSceneSession:options:"
              }
            ],
            "key.parsed_declaration" : "func application(_ application: UIApplication, configurationForConnecting connectingSceneSession: UISceneSession, options: UIScene.ConnectionOptions) -> UISceneConfiguration",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 23,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)AppDelegate(im)application:didFinishLaunchingWithOptions:\">application(_:didFinishLaunchingWithOptions:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)AppDelegate(im)application:didDiscardSceneSessions:\">application(_:didDiscardSceneSessions:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(AppDelegate) -> (UIApplication, UISceneSession, UIScene.ConnectionOptions) -> UISceneConfiguration",
            "key.typeusr" : "$s_26configurationForConnecting7optionsSo20UISceneConfigurationCSo13UIApplicationC_So0E7SessionCSo0E17ConnectionOptionsCtcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)AppDelegate(im)application:configurationForConnectingSceneSession:options:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func application(_ application: <Type usr=\"c:objc(cs)UIApplication\">UIApplication<\/Type>, didDiscardSceneSessions sceneSessions: <Type usr=\"s:Sh\">Set<\/Type>&lt;<Type usr=\"c:objc(cs)UISceneSession\">UISceneSession<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 342,
            "key.bodyoffset" : 1027,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/AppDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>application<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>application<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIApplication\">UIApplication<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>didDiscardSceneSessions<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sceneSessions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;<ref.class usr=\"c:objc(cs)UISceneSession\">UISceneSession<\/ref.class>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 451,
            "key.line" : 29,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "application(_:didDiscardSceneSessions:)",
            "key.namelength" : 101,
            "key.nameoffset" : 924,
            "key.offset" : 919,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UIApplicationDelegate(im)application:didDiscardSceneSessions:"
              }
            ],
            "key.parsed_declaration" : "func application(_ application: UIApplication, didDiscardSceneSessions sceneSessions: Set<UISceneSession>)",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 29,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)AppDelegate(im)application:didFinishLaunchingWithOptions:\">application(_:didFinishLaunchingWithOptions:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)AppDelegate(im)application:configurationForConnectingSceneSession:options:\">application(_:configurationForConnecting:options:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(AppDelegate) -> (UIApplication, Set<UISceneSession>) -> ()",
            "key.typeusr" : "$s_23didDiscardSceneSessionsySo13UIApplicationC_ShySo14UISceneSessionCGtcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)AppDelegate(im)application:didDiscardSceneSessions:"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 23,
            "key.name" : "MARK: - Core Data stack",
            "key.offset" : 1384
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>lazy var persistentContainer: <Type usr=\"c:objc(cs)NSPersistentContainer\">NSPersistentContainer<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.lazy",
                "key.length" : 4,
                "key.offset" : 1413
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/AppDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>lazy<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>persistentContainer<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSPersistentContainer\">NSPersistentContainer<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 1563,
            "key.line" : 38,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "persistentContainer",
            "key.namelength" : 19,
            "key.nameoffset" : 1422,
            "key.offset" : 1418,
            "key.parsed_declaration" : "lazy var persistentContainer: NSPersistentContainer = {\n    \/*\n     The persistent container for the application. This implementation\n     creates and returns a container, having loaded the store for the\n     application to it. This property is optional since there are legitimate\n     error conditions that could cause the creation of the store to fail.\n    *\/\n    let container = NSPersistentContainer(name: \"NetflixCloneModel\")\n    container.loadPersistentStores(completionHandler: { (storeDescription, error) in\n        if let error = error as NSError? {\n            \/\/ Replace this implementation with code to handle the error appropriately.\n            \/\/ fatalError() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n             \n            \/*\n             Typical reasons for an error here include:\n             * The parent directory does not exist, cannot be created, or disallows writing.\n             * The persistent store is not accessible, due to permissions or data protection when the device is locked.\n             * The device is out of space.\n             * The store could not be migrated to the current model version.\n             Check the error message to determine what the actual problem was.\n             *\/\n            fatalError(\"Unresolved error \\(error), \\(error.userInfo)\")\n        }\n    })\n    return container\n}()",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "NSPersistentContainer",
            "key.typeusr" : "$sSo21NSPersistentContainerCD",
            "key.usr" : "s:13Netflix_Clone11AppDelegateC19persistentContainerSo012NSPersistentF0Cvp"
          },
          {
            "key.annotated_decl" : "<Declaration>let container: <Type usr=\"c:objc(cs)NSPersistentContainer\">NSPersistentContainer<\/Type><\/Declaration>",
            "key.column" : 13,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/AppDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSPersistentContainer\">NSPersistentContainer<\/ref.class><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 9,
            "key.line" : 45,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "container",
            "key.offset" : 1811,
            "key.parsed_declaration" : "let container",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 45,
            "key.typename" : "NSPersistentContainer",
            "key.typeusr" : "$sSo21NSPersistentContainerCD",
            "key.usr" : "s:13Netflix_Clone11AppDelegateC19persistentContainerSo012NSPersistentF0CvgAFyXEfU_9containerL_AFvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 32,
            "key.name" : "MARK: - Core Data Saving support",
            "key.offset" : 2990
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func saveContext()<\/Declaration>",
            "key.bodylength" : 607,
            "key.bodyoffset" : 3049,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/AppDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>saveContext<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 629,
            "key.line" : 67,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "saveContext()",
            "key.namelength" : 14,
            "key.nameoffset" : 3033,
            "key.offset" : 3028,
            "key.parsed_declaration" : "func saveContext ()",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 67,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let context: <Type usr=\"c:objc(cs)NSManagedObjectContext\">NSManagedObjectContext<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/AppDelegate.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>context<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSManagedObjectContext\">NSManagedObjectContext<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 45,
                "key.line" : 68,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "context",
                "key.namelength" : 7,
                "key.nameoffset" : 3062,
                "key.offset" : 3058,
                "key.parsed_declaration" : "let context = persistentContainer.viewContext",
                "key.parsed_scope.end" : 68,
                "key.parsed_scope.start" : 68,
                "key.typename" : "NSManagedObjectContext",
                "key.typeusr" : "$sSo22NSManagedObjectContextCD",
                "key.usr" : "s:13Netflix_Clone11AppDelegateC11saveContextyyF7contextL_So015NSManagedObjectF0Cvp"
              }
            ],
            "key.typename" : "(AppDelegate) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone11AppDelegateC11saveContextyyF"
          }
        ],
        "key.typename" : "AppDelegate.Type",
        "key.typeusr" : "$s13Netflix_Clone11AppDelegateCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)AppDelegate"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4308,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class DownloadsViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 1550,
        "key.bodyoffset" : 173,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 155
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>DownloadsViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UIViewController"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1600,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "DownloadsViewController",
        "key.namelength" : 23,
        "key.nameoffset" : 130,
        "key.offset" : 124,
        "key.parsed_declaration" : "class DownloadsViewController: UIViewController",
        "key.parsed_scope.end" : 54,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var titles: [<Type usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 178
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>titles<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/ref.class>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 39,
            "key.line" : 11,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titles",
            "key.namelength" : 6,
            "key.nameoffset" : 190,
            "key.offset" : 186,
            "key.parsed_declaration" : "private var titles: [TitleItem] = [TitleItem]()",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[TitleItem]",
            "key.typeusr" : "$sSay13Netflix_Clone9TitleItemCGD",
            "key.usr" : "s:13Netflix_Clone23DownloadsViewControllerC6titles33_859E163AB246B4EC5AB6C8BD9BB47459LLSayAA9TitleItemCGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let downloadedTable: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 230
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>downloadedTable<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 202,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "downloadedTable",
            "key.namelength" : 15,
            "key.nameoffset" : 242,
            "key.offset" : 238,
            "key.parsed_declaration" : "private let downloadedTable: UITableView = {\n    let table = UITableView()\n    table.register(TitleTableViewCell.self, forCellReuseIdentifier: TitleTableViewCell.identifier)\n    return table\n}()",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "UITableView",
            "key.typeusr" : "$sSo11UITableViewCD",
            "key.usr" : "s:13Netflix_Clone23DownloadsViewControllerC15downloadedTable33_859E163AB246B4EC5AB6C8BD9BB47459LLSo07UITableD0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLoad()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 450
              }
            ],
            "key.bodylength" : 609,
            "key.bodyoffset" : 479,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLoad<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 630,
            "key.line" : 18,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLoad()",
            "key.namelength" : 13,
            "key.nameoffset" : 464,
            "key.offset" : 459,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLoad"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLoad()",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 18,
            "key.substructure" : [

            ],
            "key.typename" : "(DownloadsViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)DownloadsViewController(im)viewDidLoad"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func fetchLocalStorageForDownload()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1099
              }
            ],
            "key.bodylength" : 431,
            "key.bodyoffset" : 1143,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fetchLocalStorageForDownload<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 468,
            "key.line" : 34,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "fetchLocalStorageForDownload()",
            "key.namelength" : 30,
            "key.nameoffset" : 1112,
            "key.offset" : 1107,
            "key.parsed_declaration" : "private func fetchLocalStorageForDownload()",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 34,
            "key.substructure" : [

            ],
            "key.typename" : "(DownloadsViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone23DownloadsViewControllerC28fetchLocalStorageForDownload33_859E163AB246B4EC5AB6C8BD9BB47459LLyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLayoutSubviews()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 1585
              }
            ],
            "key.bodylength" : 96,
            "key.bodyoffset" : 1624,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLayoutSubviews<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 127,
            "key.line" : 48,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLayoutSubviews()",
            "key.namelength" : 23,
            "key.nameoffset" : 1599,
            "key.offset" : 1594,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLayoutSubviews"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLayoutSubviews()",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 48,
            "key.substructure" : [

            ],
            "key.typename" : "(DownloadsViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)DownloadsViewController(im)viewDidLayoutSubviews"
          }
        ],
        "key.typename" : "DownloadsViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone23DownloadsViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)DownloadsViewController"
      },
      {
        "key.annotated_decl" : "<Declaration>class DownloadsViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 2496,
        "key.bodyoffset" : 1805,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 19,
            "key.offset" : 1761
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 21,
            "key.offset" : 1782
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>DownloadsViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UITableViewDelegate"
          },
          {
            "key.name" : "UITableViewDataSource"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2576,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "DownloadsViewController",
        "key.namelength" : 23,
        "key.nameoffset" : 1736,
        "key.offset" : 1726,
        "key.parsed_declaration" : "extension DownloadsViewController: UITableViewDelegate, UITableViewDataSource",
        "key.parsed_scope.end" : 119,
        "key.parsed_scope.start" : 56,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, numberOfRowsInSection section: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 33,
            "key.bodyoffset" : 1895,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>numberOfRowsInSection<\/decl.var.parameter.argument_label> <decl.var.parameter.name>section<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 119,
            "key.line" : 57,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:numberOfRowsInSection:)",
            "key.namelength" : 71,
            "key.nameoffset" : 1815,
            "key.offset" : 1810,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:numberOfRowsInSection:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 57,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:commitEditingStyle:forRowAtIndexPath:\">tableView(_:commit:forRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DownloadsViewController) -> (UITableView, Int) -> Int",
            "key.typeusr" : "$s_21numberOfRowsInSectionSiSo11UITableViewC_SitcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:numberOfRowsInSection:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, cellForRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type><\/Declaration>",
            "key.bodylength" : 423,
            "key.bodyoffset" : 2035,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cellForRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 520,
            "key.line" : 61,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:cellForRowAt:)",
            "key.namelength" : 70,
            "key.nameoffset" : 1944,
            "key.offset" : 1939,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:cellForRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 61,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:commitEditingStyle:forRowAtIndexPath:\">tableView(_:commit:forRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let title: <Type usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.class usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 64,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "title",
                "key.namelength" : 5,
                "key.nameoffset" : 2231,
                "key.offset" : 2227,
                "key.parsed_declaration" : "let title = titles[indexPath.row]",
                "key.parsed_scope.end" : 64,
                "key.parsed_scope.start" : 64,
                "key.typename" : "TitleItem",
                "key.typeusr" : "$s13Netflix_Clone9TitleItemCD",
                "key.usr" : "s:13Netflix_Clone23DownloadsViewControllerC05tableD0_12cellForRowAtSo07UITableD4CellCSo0kD0C_10Foundation9IndexPathVtF5titleL_AA9TitleItemCvp"
              }
            ],
            "key.typename" : "(DownloadsViewController) -> (UITableView, IndexPath) -> UITableViewCell",
            "key.typeusr" : "$s_12cellForRowAtSo15UITableViewCellCSo0eF0C_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:cellForRowAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, heightForRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type><\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 2559,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>heightForRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 115,
            "key.line" : 71,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:heightForRowAt:)",
            "key.namelength" : 72,
            "key.nameoffset" : 2474,
            "key.offset" : 2469,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDelegate(im)tableView:heightForRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 71,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:commitEditingStyle:forRowAtIndexPath:\">tableView(_:commit:forRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DownloadsViewController) -> (UITableView, IndexPath) -> CGFloat",
            "key.typeusr" : "$s_14heightForRowAt12CoreGraphics7CGFloatVSo11UITableViewC_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:heightForRowAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, didSelectRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>)<\/Declaration>",
            "key.bodylength" : 887,
            "key.bodyoffset" : 2673,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>didSelectRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 967,
            "key.line" : 75,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:didSelectRowAt:)",
            "key.namelength" : 72,
            "key.nameoffset" : 2599,
            "key.offset" : 2594,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDelegate(im)tableView:didSelectRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)",
            "key.parsed_scope.end" : 97,
            "key.parsed_scope.start" : 75,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:commitEditingStyle:forRowAtIndexPath:\">tableView(_:commit:forRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let title: <Type usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.class usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 78,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "title",
                "key.namelength" : 5,
                "key.nameoffset" : 2756,
                "key.offset" : 2752,
                "key.parsed_declaration" : "let title = titles[indexPath.row]",
                "key.parsed_scope.end" : 78,
                "key.parsed_scope.start" : 78,
                "key.typename" : "TitleItem",
                "key.typeusr" : "$s13Netflix_Clone9TitleItemCD",
                "key.usr" : "s:13Netflix_Clone23DownloadsViewControllerC05tableD0_14didSelectRowAtySo07UITableD0C_10Foundation9IndexPathVtF5titleL_AA9TitleItemCvp"
              }
            ],
            "key.typename" : "(DownloadsViewController) -> (UITableView, IndexPath) -> ()",
            "key.typeusr" : "$s_14didSelectRowAtySo11UITableViewC_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:didSelectRowAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, commit editingStyle: <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type>.<Type usr=\"c:@E@UITableViewCellEditingStyle\">EditingStyle<\/Type>, forRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>)<\/Declaration>",
            "key.bodylength" : 599,
            "key.bodyoffset" : 3695,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/DownloadsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>commit<\/decl.var.parameter.argument_label> <decl.var.parameter.name>editingStyle<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class>.<ref.enum usr=\"c:@E@UITableViewCellEditingStyle\">EditingStyle<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 724,
            "key.line" : 99,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:commit:forRowAt:)",
            "key.namelength" : 117,
            "key.nameoffset" : 3576,
            "key.offset" : 3571,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:commitEditingStyle:forRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath)",
            "key.parsed_scope.end" : 117,
            "key.parsed_scope.start" : 99,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DownloadsViewController) -> (UITableView, UITableViewCell.EditingStyle, IndexPath) -> ()",
            "key.typeusr" : "$s_6commit8forRowAtySo11UITableViewC_So0eF16CellEditingStyleV10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)DownloadsViewController(im)tableView:commitEditingStyle:forRowAtIndexPath:"
          }
        ],
        "key.typename" : "DownloadsViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone23DownloadsViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)DownloadsViewController"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 7151,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>enum Sections : <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
        "key.bodylength" : 123,
        "key.bodyoffset" : 139,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 3,
            "key.offset" : 134
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Sections<\/decl.name> : <ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Int"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 144,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "Sections",
        "key.namelength" : 8,
        "key.nameoffset" : 124,
        "key.offset" : 119,
        "key.parsed_declaration" : "enum Sections: Int",
        "key.parsed_scope.end" : 17,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 23,
            "key.offset" : 144,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case TrendingMovies = 0<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 1,
                    "key.offset" : 166
                  }
                ],
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>TrendingMovies<\/decl.name> = <syntaxtype.number>0<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 18,
                "key.line" : 11,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "TrendingMovies",
                "key.namelength" : 14,
                "key.nameoffset" : 149,
                "key.offset" : 149,
                "key.parsed_declaration" : "case TrendingMovies = 0",
                "key.parsed_scope.end" : 11,
                "key.parsed_scope.start" : 11,
                "key.typename" : "(Sections.Type) -> Sections",
                "key.typeusr" : "$sy13Netflix_Clone8SectionsOACmcD",
                "key.usr" : "s:13Netflix_Clone8SectionsO14TrendingMoviesyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 19,
            "key.offset" : 172,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case TrendingTv = 1<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 1,
                    "key.offset" : 190
                  }
                ],
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>TrendingTv<\/decl.name> = <syntaxtype.number>1<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 14,
                "key.line" : 12,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "TrendingTv",
                "key.namelength" : 10,
                "key.nameoffset" : 177,
                "key.offset" : 177,
                "key.parsed_declaration" : "case TrendingTv = 1",
                "key.parsed_scope.end" : 12,
                "key.parsed_scope.start" : 12,
                "key.typename" : "(Sections.Type) -> Sections",
                "key.typeusr" : "$sy13Netflix_Clone8SectionsOACmcD",
                "key.usr" : "s:13Netflix_Clone8SectionsO10TrendingTvyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 16,
            "key.offset" : 196,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case Popular = 2<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 1,
                    "key.offset" : 211
                  }
                ],
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Popular<\/decl.name> = <syntaxtype.number>2<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 11,
                "key.line" : 13,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "Popular",
                "key.namelength" : 7,
                "key.nameoffset" : 201,
                "key.offset" : 201,
                "key.parsed_declaration" : "case Popular = 2",
                "key.parsed_scope.end" : 13,
                "key.parsed_scope.start" : 13,
                "key.typename" : "(Sections.Type) -> Sections",
                "key.typeusr" : "$sy13Netflix_Clone8SectionsOACmcD",
                "key.usr" : "s:13Netflix_Clone8SectionsO7PopularyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.offset" : 217,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case Upcoming = 3<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 1,
                    "key.offset" : 233
                  }
                ],
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Upcoming<\/decl.name> = <syntaxtype.number>3<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.line" : 14,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "Upcoming",
                "key.namelength" : 8,
                "key.nameoffset" : 222,
                "key.offset" : 222,
                "key.parsed_declaration" : "case Upcoming = 3",
                "key.parsed_scope.end" : 14,
                "key.parsed_scope.start" : 14,
                "key.typename" : "(Sections.Type) -> Sections",
                "key.typeusr" : "$sy13Netflix_Clone8SectionsOACmcD",
                "key.usr" : "s:13Netflix_Clone8SectionsO8UpcomingyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.offset" : 239,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case Toprated = 4<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.init_expr",
                    "key.length" : 1,
                    "key.offset" : 255
                  }
                ],
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>Toprated<\/decl.name> = <syntaxtype.number>4<\/syntaxtype.number><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.line" : 15,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "Toprated",
                "key.namelength" : 8,
                "key.nameoffset" : 244,
                "key.offset" : 244,
                "key.parsed_declaration" : "case Toprated = 4",
                "key.parsed_scope.end" : 15,
                "key.parsed_scope.start" : 15,
                "key.typename" : "(Sections.Type) -> Sections",
                "key.typeusr" : "$sy13Netflix_Clone8SectionsOACmcD",
                "key.usr" : "s:13Netflix_Clone8SectionsO8TopratedyA2CmF"
              }
            ]
          }
        ],
        "key.typename" : "Sections.Type",
        "key.typeusr" : "$s13Netflix_Clone8SectionsOmD",
        "key.usr" : "s:13Netflix_Clone8SectionsO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class HomeViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 2368,
        "key.bodyoffset" : 309,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 291
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HomeViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UIViewController"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 2413,
        "key.line" : 19,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "HomeViewController",
        "key.namelength" : 18,
        "key.nameoffset" : 271,
        "key.offset" : 265,
        "key.parsed_declaration" : "class HomeViewController: UIViewController",
        "key.parsed_scope.end" : 81,
        "key.parsed_scope.start" : 19,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var randomTrendingMovie: <Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 319
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>randomTrendingMovie<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.line" : 21,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "randomTrendingMovie",
            "key.namelength" : 19,
            "key.nameoffset" : 331,
            "key.offset" : 327,
            "key.parsed_declaration" : "private var randomTrendingMovie: Title?",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Title?",
            "key.typeusr" : "$s13Netflix_Clone5TitleVSgD",
            "key.usr" : "s:13Netflix_Clone18HomeViewControllerC19randomTrendingMovie33_786C2A73F03498BCEFC95E661CF01DEBLLAA5TitleVSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var headerView: <Type usr=\"c:@M@Netflix_Clone@objc(cs)HeroheaderUIView\">HeroheaderUIView<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 363
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headerView<\/decl.name>: <decl.var.type><ref.class usr=\"c:@M@Netflix_Clone@objc(cs)HeroheaderUIView\">HeroheaderUIView<\/ref.class>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.line" : 22,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "headerView",
            "key.namelength" : 10,
            "key.nameoffset" : 375,
            "key.offset" : 371,
            "key.parsed_declaration" : "private var headerView: HeroheaderUIView?",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "HeroheaderUIView?",
            "key.typeusr" : "$s13Netflix_Clone16HeroheaderUIViewCSgD",
            "key.usr" : "s:13Netflix_Clone18HomeViewControllerC06headerD033_786C2A73F03498BCEFC95E661CF01DEBLLAA16HeroheaderUIViewCSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let sectionTitles: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sectionTitles<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 103,
            "key.line" : 24,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "sectionTitles",
            "key.namelength" : 13,
            "key.nameoffset" : 418,
            "key.offset" : 414,
            "key.parsed_declaration" : "let sectionTitles: [String] = [\"Trending Movies\",\"Trending TV\",\"Popular\",\"Upcoming Movies\",\"Top Rated\"]",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 24,
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:13Netflix_Clone18HomeViewControllerC13sectionTitlesSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let homeFeedTable: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 527
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>homeFeedTable<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 248,
            "key.line" : 26,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "homeFeedTable",
            "key.namelength" : 13,
            "key.nameoffset" : 539,
            "key.offset" : 535,
            "key.parsed_declaration" : "private let homeFeedTable: UITableView = {\n    let table = UITableView(frame: .zero, style: .grouped)\n    table.register(CollectionTableViewCell.self, forCellReuseIdentifier: CollectionTableViewCell.identifier)\n    \n    return table\n}()",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 26,
            "key.typename" : "UITableView",
            "key.typeusr" : "$sSo11UITableViewCD",
            "key.usr" : "s:13Netflix_Clone18HomeViewControllerC13homeFeedTable33_786C2A73F03498BCEFC95E661CF01DEBLLSo07UITableD0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func configureHeroHeaderView()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 793
              }
            ],
            "key.bodylength" : 583,
            "key.bodyoffset" : 832,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>configureHeroHeaderView<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 615,
            "key.line" : 33,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "configureHeroHeaderView()",
            "key.namelength" : 25,
            "key.nameoffset" : 806,
            "key.offset" : 801,
            "key.parsed_declaration" : "private func configureHeroHeaderView()",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 33,
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone18HomeViewControllerC019configureHeroHeaderD033_786C2A73F03498BCEFC95E661CF01DEBLLyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLoad()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 1426
              }
            ],
            "key.bodylength" : 442,
            "key.bodyoffset" : 1455,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLoad<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 463,
            "key.line" : 50,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLoad()",
            "key.namelength" : 13,
            "key.nameoffset" : 1440,
            "key.offset" : 1435,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLoad"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLoad()",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 50,
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)HomeViewController(im)viewDidLoad"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func configureNavBar()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1908
              }
            ],
            "key.bodylength" : 587,
            "key.bodyoffset" : 1939,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>configureNavBar<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 611,
            "key.line" : 65,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "configureNavBar()",
            "key.namelength" : 17,
            "key.nameoffset" : 1921,
            "key.offset" : 1916,
            "key.parsed_declaration" : "private func configureNavBar()",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 65,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var logo: <Type usr=\"c:objc(cs)UIImage\">UIImage<\/Type>?<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>logo<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage<\/ref.class>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 40,
                "key.line" : 66,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "logo",
                "key.namelength" : 4,
                "key.nameoffset" : 1952,
                "key.offset" : 1948,
                "key.parsed_declaration" : "var logo = UIImage(named: \"netflixLogo\")",
                "key.parsed_scope.end" : 66,
                "key.parsed_scope.start" : 66,
                "key.typename" : "UIImage?",
                "key.typeusr" : "$sSo7UIImageCSgD",
                "key.usr" : "s:13Netflix_Clone18HomeViewControllerC15configureNavBar33_786C2A73F03498BCEFC95E661CF01DEBLLyyF4logoL_So7UIImageCSgvp"
              }
            ],
            "key.typename" : "(HomeViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone18HomeViewControllerC15configureNavBar33_786C2A73F03498BCEFC95E661CF01DEBLLyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLayoutSubviews()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 2537
              }
            ],
            "key.bodylength" : 94,
            "key.bodyoffset" : 2576,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLayoutSubviews<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 125,
            "key.line" : 75,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLayoutSubviews()",
            "key.namelength" : 23,
            "key.nameoffset" : 2551,
            "key.offset" : 2546,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLayoutSubviews"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLayoutSubviews()",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 75,
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)HomeViewController(im)viewDidLayoutSubviews"
          }
        ],
        "key.typename" : "HomeViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone18HomeViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)HomeViewController"
      },
      {
        "key.annotated_decl" : "<Declaration>class HomeViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 3959,
        "key.bodyoffset" : 2752,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 19,
            "key.offset" : 2710
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 21,
            "key.offset" : 2730
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HomeViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UITableViewDelegate"
          },
          {
            "key.name" : "UITableViewDataSource"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 4032,
        "key.line" : 19,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "HomeViewController",
        "key.namelength" : 18,
        "key.nameoffset" : 2690,
        "key.offset" : 2680,
        "key.parsed_declaration" : "extension HomeViewController: UITableViewDelegate,UITableViewDataSource",
        "key.parsed_scope.end" : 189,
        "key.parsed_scope.start" : 83,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, cellForRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type><\/Declaration>",
            "key.bodylength" : 2365,
            "key.bodyoffset" : 2858,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cellForRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 2462,
            "key.line" : 85,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:cellForRowAt:)",
            "key.namelength" : 70,
            "key.nameoffset" : 2767,
            "key.offset" : 2762,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:cellForRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell",
            "key.parsed_scope.end" : 155,
            "key.parsed_scope.start" : 85,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForHeaderInSection:\">tableView(_:heightForHeaderInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:titleForHeaderInSection:\">tableView(_:titleForHeaderInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:willDisplayHeaderView:forSection:\">tableView(_:willDisplayHeaderView:forSection:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> (UITableView, IndexPath) -> UITableViewCell",
            "key.typeusr" : "$s_12cellForRowAtSo15UITableViewCellCSo0eF0C_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:cellForRowAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, heightForRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type><\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 5319,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>heightForRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 115,
            "key.line" : 156,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:heightForRowAt:)",
            "key.namelength" : 72,
            "key.nameoffset" : 5234,
            "key.offset" : 5229,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDelegate(im)tableView:heightForRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat",
            "key.parsed_scope.end" : 158,
            "key.parsed_scope.start" : 156,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForHeaderInSection:\">tableView(_:heightForHeaderInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:titleForHeaderInSection:\">tableView(_:titleForHeaderInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:willDisplayHeaderView:forSection:\">tableView(_:willDisplayHeaderView:forSection:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> (UITableView, IndexPath) -> CGFloat",
            "key.typeusr" : "$s_14heightForRowAt12CoreGraphics7CGFloatVSo11UITableViewC_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForRowAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func numberOfSections(in tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 40,
            "key.bodyoffset" : 5416,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>numberOfSections<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>in<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 98,
            "key.line" : 161,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "numberOfSections(in:)",
            "key.namelength" : 43,
            "key.nameoffset" : 5364,
            "key.offset" : 5359,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)numberOfSectionsInTableView:"
              }
            ],
            "key.parsed_declaration" : "func numberOfSections(in tableView: UITableView) -> Int",
            "key.parsed_scope.end" : 163,
            "key.parsed_scope.start" : 161,
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> (UITableView) -> Int",
            "key.typeusr" : "$s2inSiSo11UITableViewC_tcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)numberOfSectionsInTableView:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, numberOfRowsInSection section: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 22,
            "key.bodyoffset" : 5547,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>numberOfRowsInSection<\/decl.var.parameter.argument_label> <decl.var.parameter.name>section<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 108,
            "key.line" : 164,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:numberOfRowsInSection:)",
            "key.namelength" : 71,
            "key.nameoffset" : 5467,
            "key.offset" : 5462,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:numberOfRowsInSection:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int",
            "key.parsed_scope.end" : 166,
            "key.parsed_scope.start" : 164,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForHeaderInSection:\">tableView(_:heightForHeaderInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:titleForHeaderInSection:\">tableView(_:titleForHeaderInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:willDisplayHeaderView:forSection:\">tableView(_:willDisplayHeaderView:forSection:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> (UITableView, Int) -> Int",
            "key.typeusr" : "$s_21numberOfRowsInSectionSiSo11UITableViewC_SitcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:numberOfRowsInSection:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, heightForHeaderInSection section: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type><\/Declaration>",
            "key.bodylength" : 23,
            "key.bodyoffset" : 5667,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>heightForHeaderInSection<\/decl.var.parameter.argument_label> <decl.var.parameter.name>section<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 116,
            "key.line" : 167,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:heightForHeaderInSection:)",
            "key.namelength" : 74,
            "key.nameoffset" : 5580,
            "key.offset" : 5575,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDelegate(im)tableView:heightForHeaderInSection:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat",
            "key.parsed_scope.end" : 169,
            "key.parsed_scope.start" : 167,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:titleForHeaderInSection:\">tableView(_:titleForHeaderInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:willDisplayHeaderView:forSection:\">tableView(_:willDisplayHeaderView:forSection:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> (UITableView, Int) -> CGFloat",
            "key.typeusr" : "$s_24heightForHeaderInSection12CoreGraphics7CGFloatVSo11UITableViewC_SitcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForHeaderInSection:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, titleForHeaderInSection section: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.bodylength" : 85,
            "key.bodyoffset" : 5787,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>titleForHeaderInSection<\/decl.var.parameter.argument_label> <decl.var.parameter.name>section<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 177,
            "key.line" : 170,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:titleForHeaderInSection:)",
            "key.namelength" : 73,
            "key.nameoffset" : 5701,
            "key.offset" : 5696,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:titleForHeaderInSection:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String?",
            "key.parsed_scope.end" : 173,
            "key.parsed_scope.start" : 170,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForHeaderInSection:\">tableView(_:heightForHeaderInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:willDisplayHeaderView:forSection:\">tableView(_:willDisplayHeaderView:forSection:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let sectionHeader: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sectionHeader<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 42,
                "key.line" : 171,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "sectionHeader",
                "key.namelength" : 13,
                "key.nameoffset" : 5800,
                "key.offset" : 5796,
                "key.parsed_declaration" : "let sectionHeader = sectionTitles[section]",
                "key.parsed_scope.end" : 171,
                "key.parsed_scope.start" : 171,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:13Netflix_Clone18HomeViewControllerC05tableD0_23titleForHeaderInSectionSSSgSo07UITableD0C_SitF07sectionI0L_SSvp"
              }
            ],
            "key.typename" : "(HomeViewController) -> (UITableView, Int) -> String?",
            "key.typeusr" : "$s_23titleForHeaderInSectionSSSgSo11UITableViewC_SitcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:titleForHeaderInSection:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, willDisplayHeaderView view: <Type usr=\"c:objc(cs)UIView\">UIView<\/Type>, forSection section: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.bodylength" : 429,
            "key.bodyoffset" : 5981,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>willDisplayHeaderView<\/decl.var.parameter.argument_label> <decl.var.parameter.name>view<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIView\">UIView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forSection<\/decl.var.parameter.argument_label> <decl.var.parameter.name>section<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 533,
            "key.line" : 174,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:willDisplayHeaderView:forSection:)",
            "key.namelength" : 96,
            "key.nameoffset" : 5883,
            "key.offset" : 5878,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDelegate(im)tableView:willDisplayHeaderView:forSection:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, willDisplayHeaderView view: UIView, forSection section: Int)",
            "key.parsed_scope.end" : 180,
            "key.parsed_scope.start" : 174,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:heightForHeaderInSection:\">tableView(_:heightForHeaderInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:titleForHeaderInSection:\">tableView(_:titleForHeaderInSection:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> (UITableView, UIView, Int) -> ()",
            "key.typeusr" : "$s_21willDisplayHeaderView10forSectionySo07UITableD0C_So6UIViewCSitcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)tableView:willDisplayHeaderView:forSection:"
          },
          {
            "key.annotated_decl" : "<Declaration>func scrollViewDidScroll(_ scrollView: <Type usr=\"c:objc(cs)UIScrollView\">UIScrollView<\/Type>)<\/Declaration>",
            "key.bodylength" : 229,
            "key.bodyoffset" : 6475,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>scrollViewDidScroll<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scrollView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIScrollView\">UIScrollView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 284,
            "key.line" : 182,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "scrollViewDidScroll(_:)",
            "key.namelength" : 47,
            "key.nameoffset" : 6426,
            "key.offset" : 6421,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UIScrollViewDelegate(im)scrollViewDidScroll:"
              }
            ],
            "key.parsed_declaration" : "func scrollViewDidScroll(_ scrollView: UIScrollView)",
            "key.parsed_scope.end" : 187,
            "key.parsed_scope.start" : 182,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let defaultOffset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>defaultOffset<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 43,
                "key.line" : 183,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "defaultOffset",
                "key.namelength" : 13,
                "key.nameoffset" : 6488,
                "key.offset" : 6484,
                "key.parsed_declaration" : "let defaultOffset = view.safeAreaInsets.top",
                "key.parsed_scope.end" : 183,
                "key.parsed_scope.start" : 183,
                "key.typename" : "CGFloat",
                "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
                "key.usr" : "s:13Netflix_Clone18HomeViewControllerC06scrollD9DidScrollyySo08UIScrollD0CF13defaultOffsetL_12CoreGraphics7CGFloatVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let offset: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>offset<\/decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 55,
                "key.line" : 184,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "offset",
                "key.namelength" : 6,
                "key.nameoffset" : 6540,
                "key.offset" : 6536,
                "key.parsed_declaration" : "let offset = defaultOffset + scrollView.contentOffset.y",
                "key.parsed_scope.end" : 184,
                "key.parsed_scope.start" : 184,
                "key.typename" : "CGFloat",
                "key.typeusr" : "$s12CoreGraphics7CGFloatVD",
                "key.usr" : "s:13Netflix_Clone18HomeViewControllerC06scrollD9DidScrollyySo08UIScrollD0CF6offsetL_12CoreGraphics7CGFloatVvp"
              }
            ],
            "key.typename" : "(HomeViewController) -> (UIScrollView) -> ()",
            "key.typeusr" : "$syySo12UIScrollViewCcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)HomeViewController(im)scrollViewDidScroll:"
          }
        ],
        "key.typename" : "HomeViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone18HomeViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)HomeViewController"
      },
      {
        "key.annotated_decl" : "<Declaration>class HomeViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 362,
        "key.bodyoffset" : 6781,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 35,
            "key.offset" : 6744
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HomeViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CollectionViewTableViewCellDelegate"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 430,
        "key.line" : 19,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "HomeViewController",
        "key.namelength" : 18,
        "key.nameoffset" : 6724,
        "key.offset" : 6714,
        "key.parsed_declaration" : "extension HomeViewController: CollectionViewTableViewCellDelegate",
        "key.parsed_scope.end" : 200,
        "key.parsed_scope.start" : 191,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func collectionViewTableViewCellDidTapCell(_ cell: <Type usr=\"c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell\">CollectionTableViewCell<\/Type>, viewModel: <Type usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/Type>)<\/Declaration>",
            "key.bodylength" : 245,
            "key.bodyoffset" : 6896,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/HomeViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectionViewTableViewCellDidTapCell<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>cell<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell\">CollectionTableViewCell<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>viewModel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 356,
            "key.line" : 192,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionViewTableViewCellDidTapCell(_:viewModel:)",
            "key.namelength" : 104,
            "key.nameoffset" : 6791,
            "key.offset" : 6786,
            "key.overrides" : [
              {
                "key.usr" : "s:13Netflix_Clone019CollectionViewTableD12CellDelegateP010collectiondedf6DidTapF0_9viewModelyAA0cedF0C_AA012TitlePreviewdL0VtF"
              }
            ],
            "key.parsed_declaration" : "func collectionViewTableViewCellDidTapCell(_ cell: CollectionTableViewCell, viewModel: TitlePreviewViewModel)",
            "key.parsed_scope.end" : 199,
            "key.parsed_scope.start" : 192,
            "key.substructure" : [

            ],
            "key.typename" : "(HomeViewController) -> (CollectionTableViewCell, TitlePreviewViewModel) -> ()",
            "key.typeusr" : "$s_9viewModely13Netflix_Clone23CollectionTableViewCellC_AB012TitlePreviewgB0VtcD",
            "key.usr" : "s:13Netflix_Clone18HomeViewControllerC010collectiond5Tabled10CellDidTapH0_9viewModelyAA010CollectiongdH0C_AA012TitlePreviewdL0VtF"
          }
        ],
        "key.typename" : "HomeViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone18HomeViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)HomeViewController"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5458,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class SearchViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 1911,
        "key.bodyoffset" : 167,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 149
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>SearchViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UIViewController"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1958,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "SearchViewController",
        "key.namelength" : 20,
        "key.nameoffset" : 127,
        "key.offset" : 121,
        "key.parsed_declaration" : "class SearchViewController: UIViewController",
        "key.parsed_scope.end" : 74,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var titles: [<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 177
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>titles<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titles",
            "key.namelength" : 6,
            "key.nameoffset" : 189,
            "key.offset" : 185,
            "key.parsed_declaration" : "private var titles: [Title] = [Title]()",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[Title]",
            "key.typeusr" : "$sSay13Netflix_Clone5TitleVGD",
            "key.usr" : "s:13Netflix_Clone20SearchViewControllerC6titles33_359E9BAB7AEF2597DC27A330F31C9D13LLSayAA5TitleVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let searchTable: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 226
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>searchTable<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 198,
            "key.line" : 14,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "searchTable",
            "key.namelength" : 11,
            "key.nameoffset" : 238,
            "key.offset" : 234,
            "key.parsed_declaration" : "private let searchTable: UITableView = {\n    let table = UITableView()\n    table.register(TitleTableViewCell.self, forCellReuseIdentifier: TitleTableViewCell.identifier)\n    return table\n}()",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.typename" : "UITableView",
            "key.typeusr" : "$sSo11UITableViewCD",
            "key.usr" : "s:13Netflix_Clone20SearchViewControllerC11searchTable33_359E9BAB7AEF2597DC27A330F31C9D13LLSo07UITableD0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let searchController: <Type usr=\"c:objc(cs)UISearchController\">UISearchController<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 442
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>searchController<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UISearchController\">UISearchController<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 327,
            "key.line" : 20,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "searchController",
            "key.namelength" : 16,
            "key.nameoffset" : 454,
            "key.offset" : 450,
            "key.parsed_declaration" : "private let searchController: UISearchController = {\n    \n    let controller = UISearchController(searchResultsController: SearchResultsViewController())\n    controller.searchBar.placeholder = \"Search for a Movie or TV show.\"\n    controller.searchBar.searchBarStyle = .minimal\n    \n    return controller\n}()",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.typename" : "UISearchController",
            "key.typeusr" : "$sSo18UISearchControllerCD",
            "key.usr" : "s:13Netflix_Clone20SearchViewControllerC06searchE033_359E9BAB7AEF2597DC27A330F31C9D13LLSo08UISearchE0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLoad()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 787
              }
            ],
            "key.bodylength" : 613,
            "key.bodyoffset" : 816,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLoad<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 634,
            "key.line" : 29,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLoad()",
            "key.namelength" : 13,
            "key.nameoffset" : 801,
            "key.offset" : 796,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLoad"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLoad()",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 29,
            "key.substructure" : [

            ],
            "key.typename" : "(SearchViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SearchViewController(im)viewDidLoad"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLayoutSubviews()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 1440
              }
            ],
            "key.bodylength" : 92,
            "key.bodyoffset" : 1479,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLayoutSubviews<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 123,
            "key.line" : 49,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLayoutSubviews()",
            "key.namelength" : 23,
            "key.nameoffset" : 1454,
            "key.offset" : 1449,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLayoutSubviews"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLayoutSubviews()",
            "key.parsed_scope.end" : 53,
            "key.parsed_scope.start" : 49,
            "key.substructure" : [

            ],
            "key.typename" : "(SearchViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SearchViewController(im)viewDidLayoutSubviews"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func fetchSearchMovies()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1582
              }
            ],
            "key.bodylength" : 451,
            "key.bodyoffset" : 1615,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fetchSearchMovies<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 477,
            "key.line" : 55,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "fetchSearchMovies()",
            "key.namelength" : 19,
            "key.nameoffset" : 1595,
            "key.offset" : 1590,
            "key.parsed_declaration" : "private func fetchSearchMovies()",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 55,
            "key.substructure" : [

            ],
            "key.typename" : "(SearchViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone20SearchViewControllerC05fetchC6Movies33_359E9BAB7AEF2597DC27A330F31C9D13LLyyF"
          }
        ],
        "key.typename" : "SearchViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone20SearchViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)SearchViewController"
      },
      {
        "key.annotated_decl" : "<Declaration>class SearchViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 1806,
        "key.bodyoffset" : 2157,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 19,
            "key.offset" : 2113
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 21,
            "key.offset" : 2134
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>SearchViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UITableViewDelegate"
          },
          {
            "key.name" : "UITableViewDataSource"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1883,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "SearchViewController",
        "key.namelength" : 20,
        "key.nameoffset" : 2091,
        "key.offset" : 2081,
        "key.parsed_declaration" : "extension SearchViewController: UITableViewDelegate, UITableViewDataSource",
        "key.parsed_scope.end" : 121,
        "key.parsed_scope.start" : 76,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, numberOfRowsInSection section: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 33,
            "key.bodyoffset" : 2247,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>numberOfRowsInSection<\/decl.var.parameter.argument_label> <decl.var.parameter.name>section<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 119,
            "key.line" : 77,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:numberOfRowsInSection:)",
            "key.namelength" : 71,
            "key.nameoffset" : 2167,
            "key.offset" : 2162,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:numberOfRowsInSection:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 77,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(SearchViewController) -> (UITableView, Int) -> Int",
            "key.typeusr" : "$s_21numberOfRowsInSectionSiSo11UITableViewC_SitcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:numberOfRowsInSection:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, cellForRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type><\/Declaration>",
            "key.bodylength" : 450,
            "key.bodyoffset" : 2387,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cellForRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 547,
            "key.line" : 81,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:cellForRowAt:)",
            "key.namelength" : 70,
            "key.nameoffset" : 2296,
            "key.offset" : 2291,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:cellForRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 81,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let title: <Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 83,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "title",
                "key.namelength" : 5,
                "key.nameoffset" : 2575,
                "key.offset" : 2571,
                "key.parsed_declaration" : "let title = titles[indexPath.row]",
                "key.parsed_scope.end" : 83,
                "key.parsed_scope.start" : 83,
                "key.typename" : "Title",
                "key.typeusr" : "$s13Netflix_Clone5TitleVD",
                "key.usr" : "s:13Netflix_Clone20SearchViewControllerC05tableD0_12cellForRowAtSo07UITableD4CellCSo0kD0C_10Foundation9IndexPathVtF5titleL_AA5TitleVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let model: <Type usr=\"s:13Netflix_Clone14TitleViewModelV\">TitleViewModel<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>model<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone14TitleViewModelV\">TitleViewModel<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 136,
                "key.line" : 85,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "model",
                "key.namelength" : 5,
                "key.nameoffset" : 2626,
                "key.offset" : 2622,
                "key.parsed_declaration" : "let model = TitleViewModel(titleName: title.original_name ?? title.original_title ?? \"UNKNOWN NAME\", posterURL: title.poster_path ?? \"\")",
                "key.parsed_scope.end" : 85,
                "key.parsed_scope.start" : 85,
                "key.typename" : "TitleViewModel",
                "key.typeusr" : "$s13Netflix_Clone14TitleViewModelVD",
                "key.usr" : "s:13Netflix_Clone20SearchViewControllerC05tableD0_12cellForRowAtSo07UITableD4CellCSo0kD0C_10Foundation9IndexPathVtF5modelL_AA05TitleD5ModelVvp"
              }
            ],
            "key.typename" : "(SearchViewController) -> (UITableView, IndexPath) -> UITableViewCell",
            "key.typeusr" : "$s_12cellForRowAtSo15UITableViewCellCSo0eF0C_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:cellForRowAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, heightForRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type><\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 2933,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>heightForRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 115,
            "key.line" : 91,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:heightForRowAt:)",
            "key.namelength" : 72,
            "key.nameoffset" : 2848,
            "key.offset" : 2843,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDelegate(im)tableView:heightForRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat",
            "key.parsed_scope.end" : 93,
            "key.parsed_scope.start" : 91,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(SearchViewController) -> (UITableView, IndexPath) -> CGFloat",
            "key.typeusr" : "$s_14heightForRowAt12CoreGraphics7CGFloatVSo11UITableViewC_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:heightForRowAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, didSelectRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>)<\/Declaration>",
            "key.bodylength" : 909,
            "key.bodyoffset" : 3047,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>didSelectRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 989,
            "key.line" : 95,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:didSelectRowAt:)",
            "key.namelength" : 72,
            "key.nameoffset" : 2973,
            "key.offset" : 2968,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDelegate(im)tableView:didSelectRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)",
            "key.parsed_scope.end" : 119,
            "key.parsed_scope.start" : 95,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let title: <Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 98,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "title",
                "key.namelength" : 5,
                "key.nameoffset" : 3130,
                "key.offset" : 3126,
                "key.parsed_declaration" : "let title = titles[indexPath.row]",
                "key.parsed_scope.end" : 98,
                "key.parsed_scope.start" : 98,
                "key.typename" : "Title",
                "key.typeusr" : "$s13Netflix_Clone5TitleVD",
                "key.usr" : "s:13Netflix_Clone20SearchViewControllerC05tableD0_14didSelectRowAtySo07UITableD0C_10Foundation9IndexPathVtF5titleL_AA5TitleVvp"
              }
            ],
            "key.typename" : "(SearchViewController) -> (UITableView, IndexPath) -> ()",
            "key.typeusr" : "$s_14didSelectRowAtySo11UITableViewC_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)tableView:didSelectRowAtIndexPath:"
          }
        ],
        "key.typename" : "SearchViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone20SearchViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)SearchViewController"
      },
      {
        "key.annotated_decl" : "<Declaration>class SearchViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 1396,
        "key.bodyoffset" : 4060,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 3998
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 35,
            "key.offset" : 4023
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>SearchViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UISearchResultsUpdating"
          },
          {
            "key.name" : "SearchResultsViewControllerDelegate"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1491,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "SearchViewController",
        "key.namelength" : 20,
        "key.nameoffset" : 3976,
        "key.offset" : 3966,
        "key.parsed_declaration" : "extension SearchViewController: UISearchResultsUpdating, SearchResultsViewControllerDelegate",
        "key.parsed_scope.end" : 165,
        "key.parsed_scope.start" : 123,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func searchResultsViewControllerDidTapItem(_ viewModel: <Type usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/Type>)<\/Declaration>",
            "key.bodylength" : 245,
            "key.bodyoffset" : 4150,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>searchResultsViewControllerDidTapItem<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>viewModel<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 326,
            "key.line" : 125,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "searchResultsViewControllerDidTapItem(_:)",
            "key.namelength" : 73,
            "key.nameoffset" : 4075,
            "key.offset" : 4070,
            "key.overrides" : [
              {
                "key.usr" : "s:13Netflix_Clone35SearchResultsViewControllerDelegateP06searchdeF10DidTapItemyyAA012TitlePreviewE5ModelVF"
              }
            ],
            "key.parsed_declaration" : "func searchResultsViewControllerDidTapItem(_ viewModel: TitlePreviewViewModel)",
            "key.parsed_scope.end" : 132,
            "key.parsed_scope.start" : 125,
            "key.substructure" : [

            ],
            "key.typename" : "(SearchViewController) -> (TitlePreviewViewModel) -> ()",
            "key.typeusr" : "$syy13Netflix_Clone21TitlePreviewViewModelVcD",
            "key.usr" : "s:13Netflix_Clone20SearchViewControllerC013searchResultsdE10DidTapItemyyAA012TitlePreviewD5ModelVF"
          },
          {
            "key.annotated_decl" : "<Declaration>func updateSearchResults(for searchController: <Type usr=\"c:objc(cs)UISearchController\">UISearchController<\/Type>)<\/Declaration>",
            "key.bodylength" : 965,
            "key.bodyoffset" : 4479,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateSearchResults<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>searchController<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UISearchController\">UISearchController<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1034,
            "key.line" : 135,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "updateSearchResults(for:)",
            "key.namelength" : 61,
            "key.nameoffset" : 4416,
            "key.offset" : 4411,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UISearchResultsUpdating(im)updateSearchResultsForSearchController:"
              }
            ],
            "key.parsed_declaration" : "func updateSearchResults(for searchController: UISearchController)",
            "key.parsed_scope.end" : 162,
            "key.parsed_scope.start" : 135,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let searchBar: <Type usr=\"c:objc(cs)UISearchBar\">UISearchBar<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/SearchViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>searchBar<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UISearchBar\">UISearchBar<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 42,
                "key.line" : 136,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "searchBar",
                "key.namelength" : 9,
                "key.nameoffset" : 4492,
                "key.offset" : 4488,
                "key.parsed_declaration" : "let searchBar = searchController.searchBar",
                "key.parsed_scope.end" : 136,
                "key.parsed_scope.start" : 136,
                "key.typename" : "UISearchBar",
                "key.typeusr" : "$sSo11UISearchBarCD",
                "key.usr" : "s:13Netflix_Clone20SearchViewControllerC06updateC7Results3forySo08UISearchE0C_tF9searchBarL_So0iK0Cvp"
              }
            ],
            "key.typename" : "(SearchViewController) -> (UISearchController) -> ()",
            "key.typeusr" : "$s3forySo18UISearchControllerC_tcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)SearchViewController(im)updateSearchResultsForSearchController:"
          }
        ],
        "key.typename" : "SearchViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone20SearchViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)SearchViewController"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3605,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class UpcomingViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 1565,
        "key.bodyoffset" : 171,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 153
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>UpcomingViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UIViewController"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1614,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "UpcomingViewController",
        "key.namelength" : 22,
        "key.nameoffset" : 129,
        "key.offset" : 123,
        "key.parsed_declaration" : "class UpcomingViewController: UIViewController",
        "key.parsed_scope.end" : 58,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var titles: [<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 176
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>titles<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.line" : 11,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titles",
            "key.namelength" : 6,
            "key.nameoffset" : 188,
            "key.offset" : 184,
            "key.parsed_declaration" : "private var titles: [Title] = [Title]()",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[Title]",
            "key.typeusr" : "$sSay13Netflix_Clone5TitleVGD",
            "key.usr" : "s:13Netflix_Clone22UpcomingViewControllerC6titles33_19EA402DFADC08214E7E3B6D95579153LLSayAA5TitleVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let upcomingTable: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 225
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>upcomingTable<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 200,
            "key.line" : 13,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "upcomingTable",
            "key.namelength" : 13,
            "key.nameoffset" : 237,
            "key.offset" : 233,
            "key.parsed_declaration" : "private let upcomingTable: UITableView = {\n    let table = UITableView()\n    table.register(TitleTableViewCell.self, forCellReuseIdentifier: TitleTableViewCell.identifier)\n    return table\n}()",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.typename" : "UITableView",
            "key.typeusr" : "$sSo11UITableViewCD",
            "key.usr" : "s:13Netflix_Clone22UpcomingViewControllerC13upcomingTable33_19EA402DFADC08214E7E3B6D95579153LLSo07UITableD0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLoad()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 443
              }
            ],
            "key.bodylength" : 479,
            "key.bodyoffset" : 472,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLoad<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 500,
            "key.line" : 19,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLoad()",
            "key.namelength" : 13,
            "key.nameoffset" : 457,
            "key.offset" : 452,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLoad"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLoad()",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 19,
            "key.substructure" : [

            ],
            "key.typename" : "(UpcomingViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)UpcomingViewController(im)viewDidLoad"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLayoutSubviews()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 962
              }
            ],
            "key.bodylength" : 85,
            "key.bodyoffset" : 1001,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLayoutSubviews<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 116,
            "key.line" : 35,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLayoutSubviews()",
            "key.namelength" : 23,
            "key.nameoffset" : 976,
            "key.offset" : 971,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLayoutSubviews"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLayoutSubviews()",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 35,
            "key.substructure" : [

            ],
            "key.typename" : "(UpcomingViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)UpcomingViewController(im)viewDidLayoutSubviews"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func fetchUpcoming()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1145
              }
            ],
            "key.bodylength" : 559,
            "key.bodyoffset" : 1175,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fetchUpcoming<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 582,
            "key.line" : 41,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "fetchUpcoming()",
            "key.namelength" : 16,
            "key.nameoffset" : 1158,
            "key.offset" : 1153,
            "key.parsed_declaration" : "private func fetchUpcoming ()",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 41,
            "key.substructure" : [

            ],
            "key.typename" : "(UpcomingViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone22UpcomingViewControllerC05fetchC033_19EA402DFADC08214E7E3B6D95579153LLyyF"
          }
        ],
        "key.typename" : "UpcomingViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone22UpcomingViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)UpcomingViewController"
      },
      {
        "key.annotated_decl" : "<Declaration>class UpcomingViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 1784,
        "key.bodyoffset" : 1817,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 21,
            "key.offset" : 1773
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 19,
            "key.offset" : 1796
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>UpcomingViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UITableViewDataSource"
          },
          {
            "key.name" : "UITableViewDelegate"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1863,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "UpcomingViewController",
        "key.namelength" : 22,
        "key.nameoffset" : 1749,
        "key.offset" : 1739,
        "key.parsed_declaration" : "extension UpcomingViewController: UITableViewDataSource, UITableViewDelegate",
        "key.parsed_scope.end" : 105,
        "key.parsed_scope.start" : 60,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, numberOfRowsInSection section: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 33,
            "key.bodyoffset" : 1907,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>numberOfRowsInSection<\/decl.var.parameter.argument_label> <decl.var.parameter.name>section<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 119,
            "key.line" : 61,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:numberOfRowsInSection:)",
            "key.namelength" : 71,
            "key.nameoffset" : 1827,
            "key.offset" : 1822,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:numberOfRowsInSection:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 61,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(UpcomingViewController) -> (UITableView, Int) -> Int",
            "key.typeusr" : "$s_21numberOfRowsInSectionSiSo11UITableViewC_SitcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:numberOfRowsInSection:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, cellForRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type><\/Declaration>",
            "key.bodylength" : 423,
            "key.bodyoffset" : 2047,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cellForRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 520,
            "key.line" : 65,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:cellForRowAt:)",
            "key.namelength" : 70,
            "key.nameoffset" : 1956,
            "key.offset" : 1951,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDataSource(im)tableView:cellForRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 65,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let title: <Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 68,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "title",
                "key.namelength" : 5,
                "key.nameoffset" : 2243,
                "key.offset" : 2239,
                "key.parsed_declaration" : "let title = titles[indexPath.row]",
                "key.parsed_scope.end" : 68,
                "key.parsed_scope.start" : 68,
                "key.typename" : "Title",
                "key.typeusr" : "$s13Netflix_Clone5TitleVD",
                "key.usr" : "s:13Netflix_Clone22UpcomingViewControllerC05tableD0_12cellForRowAtSo07UITableD4CellCSo0kD0C_10Foundation9IndexPathVtF5titleL_AA5TitleVvp"
              }
            ],
            "key.typename" : "(UpcomingViewController) -> (UITableView, IndexPath) -> UITableViewCell",
            "key.typeusr" : "$s_12cellForRowAtSo15UITableViewCellCSo0eF0C_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:cellForRowAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, heightForRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/Type><\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 2571,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>heightForRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 115,
            "key.line" : 75,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:heightForRowAt:)",
            "key.namelength" : 72,
            "key.nameoffset" : 2486,
            "key.offset" : 2481,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDelegate(im)tableView:heightForRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat",
            "key.parsed_scope.end" : 77,
            "key.parsed_scope.start" : 75,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:didSelectRowAtIndexPath:\">tableView(_:didSelectRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(UpcomingViewController) -> (UITableView, IndexPath) -> CGFloat",
            "key.typeusr" : "$s_14heightForRowAt12CoreGraphics7CGFloatVSo11UITableViewC_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:heightForRowAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func tableView(_ tableView: <Type usr=\"c:objc(cs)UITableView\">UITableView<\/Type>, didSelectRowAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>)<\/Declaration>",
            "key.bodylength" : 909,
            "key.bodyoffset" : 2685,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>tableView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tableView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableView\">UITableView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>didSelectRowAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 989,
            "key.line" : 79,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "tableView(_:didSelectRowAt:)",
            "key.namelength" : 72,
            "key.nameoffset" : 2611,
            "key.offset" : 2606,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UITableViewDelegate(im)tableView:didSelectRowAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)",
            "key.parsed_scope.end" : 103,
            "key.parsed_scope.start" : 79,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:numberOfRowsInSection:\">tableView(_:numberOfRowsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:cellForRowAtIndexPath:\">tableView(_:cellForRowAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:heightForRowAtIndexPath:\">tableView(_:heightForRowAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let title: <Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/Core\/UpcomingViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 82,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "title",
                "key.namelength" : 5,
                "key.nameoffset" : 2768,
                "key.offset" : 2764,
                "key.parsed_declaration" : "let title = titles[indexPath.row]",
                "key.parsed_scope.end" : 82,
                "key.parsed_scope.start" : 82,
                "key.typename" : "Title",
                "key.typeusr" : "$s13Netflix_Clone5TitleVD",
                "key.usr" : "s:13Netflix_Clone22UpcomingViewControllerC05tableD0_14didSelectRowAtySo07UITableD0C_10Foundation9IndexPathVtF5titleL_AA5TitleVvp"
              }
            ],
            "key.typename" : "(UpcomingViewController) -> (UITableView, IndexPath) -> ()",
            "key.typeusr" : "$s_14didSelectRowAtySo11UITableViewC_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)UpcomingViewController(im)tableView:didSelectRowAtIndexPath:"
          }
        ],
        "key.typename" : "UpcomingViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone22UpcomingViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)UpcomingViewController"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3030,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>protocol SearchResultsViewControllerDelegate : AnyObject<\/Declaration>",
        "key.bodylength" : 84,
        "key.bodyoffset" : 185,
        "key.column" : 10,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 174
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>SearchResultsViewControllerDelegate<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "AnyObject"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 142,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "SearchResultsViewControllerDelegate",
        "key.namelength" : 35,
        "key.nameoffset" : 137,
        "key.offset" : 128,
        "key.parsed_declaration" : "protocol SearchResultsViewControllerDelegate: AnyObject",
        "key.parsed_scope.end" : 12,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func searchResultsViewControllerDidTapItem(_ viewModel: <Type usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>searchResultsViewControllerDidTapItem<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>viewModel<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 78,
            "key.line" : 11,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "searchResultsViewControllerDidTapItem(_:)",
            "key.namelength" : 73,
            "key.nameoffset" : 195,
            "key.offset" : 190,
            "key.parsed_declaration" : "func searchResultsViewControllerDidTapItem(_ viewModel: TitlePreviewViewModel)",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : SearchResultsViewControllerDelegate> (Self) -> (TitlePreviewViewModel) -> ()",
            "key.typeusr" : "$syy13Netflix_Clone21TitlePreviewViewModelVcD",
            "key.usr" : "s:13Netflix_Clone35SearchResultsViewControllerDelegateP06searchdeF10DidTapItemyyAA012TitlePreviewE5ModelVF"
          }
        ],
        "key.typename" : "SearchResultsViewControllerDelegate.Protocol",
        "key.typeusr" : "$s13Netflix_Clone35SearchResultsViewControllerDelegate_pmD",
        "key.usr" : "s:13Netflix_Clone35SearchResultsViewControllerDelegateP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class SearchResultsViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 1127,
        "key.bodyoffset" : 325,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 307
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>SearchResultsViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UIViewController"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1181,
        "key.line" : 14,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "SearchResultsViewController",
        "key.namelength" : 27,
        "key.nameoffset" : 278,
        "key.offset" : 272,
        "key.parsed_declaration" : "class SearchResultsViewController: UIViewController",
        "key.parsed_scope.end" : 50,
        "key.parsed_scope.start" : 14,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var titles: [<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 335
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>titles<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.line" : 16,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titles",
            "key.namelength" : 6,
            "key.nameoffset" : 346,
            "key.offset" : 342,
            "key.parsed_declaration" : "public var titles: [Title] = [Title]()",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[Title]",
            "key.typeusr" : "$sSay13Netflix_Clone5TitleVGD",
            "key.usr" : "s:13Netflix_Clone27SearchResultsViewControllerC6titlesSayAA5TitleVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public weak var delegate: <Type usr=\"s:13Netflix_Clone35SearchResultsViewControllerDelegateP\">SearchResultsViewControllerDelegate<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.weak",
                "key.length" : 4,
                "key.offset" : 390
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 383
              }
            ],
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>weak<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>delegate<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:13Netflix_Clone35SearchResultsViewControllerDelegateP\">SearchResultsViewControllerDelegate<\/ref.protocol>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.line" : 18,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "delegate",
            "key.namelength" : 8,
            "key.nameoffset" : 399,
            "key.offset" : 395,
            "key.parsed_declaration" : "public weak var delegate: SearchResultsViewControllerDelegate?",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "SearchResultsViewControllerDelegate?",
            "key.typeusr" : "$s13Netflix_Clone35SearchResultsViewControllerDelegate_pSgD",
            "key.usr" : "s:13Netflix_Clone27SearchResultsViewControllerC8delegateAA0cdeF8Delegate_pSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let searchResultsCollectionView: <Type usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 455
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>searchResultsCollectionView<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 518,
            "key.line" : 20,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "searchResultsCollectionView",
            "key.namelength" : 27,
            "key.nameoffset" : 466,
            "key.offset" : 462,
            "key.parsed_declaration" : "public let searchResultsCollectionView: UICollectionView = {\n    let layout = UICollectionViewFlowLayout()\n    \n    layout.itemSize = CGSize (width: UIScreen.main.bounds.width \/ 3 - 10, height: 200)\n    layout.minimumInteritemSpacing = 0\n    \n    let collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)\n    collectionView.register(TitleCollectionViewCell.self, forCellWithReuseIdentifier: TitleCollectionViewCell.identifier)\n    return collectionView\n    \n}()",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.typename" : "UICollectionView",
            "key.typeusr" : "$sSo16UICollectionViewCD",
            "key.usr" : "s:13Netflix_Clone27SearchResultsViewControllerC06searchd10CollectionE0So012UICollectionE0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLoad()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 990
              }
            ],
            "key.bodylength" : 263,
            "key.bodyoffset" : 1019,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLoad<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 284,
            "key.line" : 32,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLoad()",
            "key.namelength" : 13,
            "key.nameoffset" : 1004,
            "key.offset" : 999,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLoad"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLoad()",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 32,
            "key.substructure" : [

            ],
            "key.typename" : "(SearchResultsViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SearchResultsViewController(im)viewDidLoad"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLayoutSubviews()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 1293
              }
            ],
            "key.bodylength" : 108,
            "key.bodyoffset" : 1332,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLayoutSubviews<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 139,
            "key.line" : 43,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLayoutSubviews()",
            "key.namelength" : 23,
            "key.nameoffset" : 1307,
            "key.offset" : 1302,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLayoutSubviews"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLayoutSubviews()",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 43,
            "key.substructure" : [

            ],
            "key.typename" : "(SearchResultsViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SearchResultsViewController(im)viewDidLayoutSubviews"
          }
        ],
        "key.typename" : "SearchResultsViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone27SearchResultsViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)SearchResultsViewController"
      },
      {
        "key.annotated_decl" : "<Declaration>class SearchResultsViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 1480,
        "key.bodyoffset" : 1548,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 26,
            "key.offset" : 1494
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 24,
            "key.offset" : 1522
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>SearchResultsViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UICollectionViewDataSource"
          },
          {
            "key.name" : "UICollectionViewDelegate"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1574,
        "key.line" : 14,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "SearchResultsViewController",
        "key.namelength" : 27,
        "key.nameoffset" : 1465,
        "key.offset" : 1455,
        "key.parsed_declaration" : "extension SearchResultsViewController: UICollectionViewDataSource, UICollectionViewDelegate",
        "key.parsed_scope.end" : 90,
        "key.parsed_scope.start" : 52,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func collectionView(_ collectionView: <Type usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/Type>, numberOfItemsInSection section: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 33,
            "key.bodyoffset" : 1654,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectionView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collectionView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>numberOfItemsInSection<\/decl.var.parameter.argument_label> <decl.var.parameter.name>section<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 135,
            "key.line" : 53,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionView(_:numberOfItemsInSection:)",
            "key.namelength" : 87,
            "key.nameoffset" : 1558,
            "key.offset" : 1553,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UICollectionViewDataSource(im)collectionView:numberOfItemsInSection:"
              }
            ],
            "key.parsed_declaration" : "func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 53,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchResultsViewController(im)collectionView:cellForItemAtIndexPath:\">collectionView(_:cellForItemAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchResultsViewController(im)collectionView:didSelectItemAtIndexPath:\">collectionView(_:didSelectItemAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(SearchResultsViewController) -> (UICollectionView, Int) -> Int",
            "key.typeusr" : "$s_22numberOfItemsInSectionSiSo16UICollectionViewC_SitcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)SearchResultsViewController(im)collectionView:numberOfItemsInSection:"
          },
          {
            "key.annotated_decl" : "<Declaration>func collectionView(_ collectionView: <Type usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/Type>, cellForItemAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"c:objc(cs)UICollectionViewCell\">UICollectionViewCell<\/Type><\/Declaration>",
            "key.bodylength" : 357,
            "key.bodyoffset" : 1815,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectionView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collectionView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cellForItemAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UICollectionViewCell\">UICollectionViewCell<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 475,
            "key.line" : 57,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionView(_:cellForItemAt:)",
            "key.namelength" : 86,
            "key.nameoffset" : 1703,
            "key.offset" : 1698,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UICollectionViewDataSource(im)collectionView:cellForItemAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell",
            "key.parsed_scope.end" : 66,
            "key.parsed_scope.start" : 57,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchResultsViewController(im)collectionView:numberOfItemsInSection:\">collectionView(_:numberOfItemsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchResultsViewController(im)collectionView:didSelectItemAtIndexPath:\">collectionView(_:didSelectItemAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let title: <Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 61,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "title",
                "key.namelength" : 5,
                "key.nameoffset" : 2046,
                "key.offset" : 2042,
                "key.parsed_declaration" : "let title = titles[indexPath.row]",
                "key.parsed_scope.end" : 61,
                "key.parsed_scope.start" : 61,
                "key.typename" : "Title",
                "key.typeusr" : "$s13Netflix_Clone5TitleVD",
                "key.usr" : "s:13Netflix_Clone27SearchResultsViewControllerC010collectionE0_13cellForItemAtSo012UICollectionE4CellCSo0lE0C_10Foundation9IndexPathVtF5titleL_AA5TitleVvp"
              }
            ],
            "key.typename" : "(SearchResultsViewController) -> (UICollectionView, IndexPath) -> UICollectionViewCell",
            "key.typeusr" : "$s_13cellForItemAtSo20UICollectionViewCellCSo0eF0C_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)SearchResultsViewController(im)collectionView:cellForItemAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func collectionView(_ collectionView: <Type usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/Type>, didSelectItemAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>)<\/Declaration>",
            "key.bodylength" : 738,
            "key.bodyoffset" : 2278,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectionView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collectionView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>didSelectItemAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 834,
            "key.line" : 68,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionView(_:didSelectItemAt:)",
            "key.namelength" : 88,
            "key.nameoffset" : 2188,
            "key.offset" : 2183,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UICollectionViewDelegate(im)collectionView:didSelectItemAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath)",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 68,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchResultsViewController(im)collectionView:numberOfItemsInSection:\">collectionView(_:numberOfItemsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)SearchResultsViewController(im)collectionView:cellForItemAtIndexPath:\">collectionView(_:cellForItemAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let title: <Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/SearchResultsViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 70,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "title",
                "key.namelength" : 5,
                "key.nameoffset" : 2358,
                "key.offset" : 2354,
                "key.parsed_declaration" : "let title = titles[indexPath.row]",
                "key.parsed_scope.end" : 70,
                "key.parsed_scope.start" : 70,
                "key.typename" : "Title",
                "key.typeusr" : "$s13Netflix_Clone5TitleVD",
                "key.usr" : "s:13Netflix_Clone27SearchResultsViewControllerC010collectionE0_15didSelectItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF5titleL_AA5TitleVvp"
              }
            ],
            "key.typename" : "(SearchResultsViewController) -> (UICollectionView, IndexPath) -> ()",
            "key.typeusr" : "$s_15didSelectItemAtySo16UICollectionViewC_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)SearchResultsViewController(im)collectionView:didSelectItemAtIndexPath:"
          }
        ],
        "key.typename" : "SearchResultsViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone27SearchResultsViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)SearchResultsViewController"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3775,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class TitlePreviewViewController : <Type usr=\"c:objc(cs)UIViewController\">UIViewController<\/Type><\/Declaration>",
        "key.bodylength" : 3578,
        "key.bodyoffset" : 193,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 175
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TitlePreviewViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UIViewController\">UIViewController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UIViewController"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 3631,
        "key.line" : 11,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "TitlePreviewViewController",
        "key.namelength" : 26,
        "key.nameoffset" : 147,
        "key.offset" : 141,
        "key.parsed_declaration" : "class TitlePreviewViewController: UIViewController",
        "key.parsed_scope.end" : 107,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let titleLabel: <Type usr=\"c:objc(cs)UILabel\">UILabel<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 198
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>titleLabel<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UILabel\">UILabel<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 246,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titleLabel",
            "key.namelength" : 10,
            "key.nameoffset" : 210,
            "key.offset" : 206,
            "key.parsed_declaration" : "private let titleLabel: UILabel = {\n    let label = UILabel()\n    label.translatesAutoresizingMaskIntoConstraints = false\n    label.font = .systemFont(ofSize: 22, weight: .bold)\n    label.text = \"Harry Potter\"\n    return label\n}()",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "UILabel",
            "key.typeusr" : "$sSo7UILabelCD",
            "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC10titleLabel33_48D2358D0FF7C3EBFCAC272E65EDAA2FLLSo7UILabelCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let overviewLabel: <Type usr=\"c:objc(cs)UILabel\">UILabel<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 462
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>overviewLabel<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UILabel\">UILabel<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 352,
            "key.line" : 20,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "overviewLabel",
            "key.namelength" : 13,
            "key.nameoffset" : 474,
            "key.offset" : 470,
            "key.parsed_declaration" : "private let overviewLabel: UILabel = {\n    let label = UILabel()\n    label.translatesAutoresizingMaskIntoConstraints = false\n    label.font = .systemFont(ofSize: 18, weight: .regular)\n    label.numberOfLines = 0\/\/ means it can have multiple lines\n    label.text = \"This one of the best ever movies I watched...\"\n    return label\n}()",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.typename" : "UILabel",
            "key.typeusr" : "$sSo7UILabelCD",
            "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC13overviewLabel33_48D2358D0FF7C3EBFCAC272E65EDAA2FLLSo7UILabelCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let downloadButton: <Type usr=\"c:objc(cs)UIButton\">UIButton<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 832
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>downloadButton<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIButton\">UIButton<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 387,
            "key.line" : 29,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "downloadButton",
            "key.namelength" : 14,
            "key.nameoffset" : 844,
            "key.offset" : 840,
            "key.parsed_declaration" : "private let downloadButton: UIButton = {\n    let button = UIButton()\n    button.translatesAutoresizingMaskIntoConstraints = false\n    button.backgroundColor = .red\n    button.setTitle(\"Download\", for: .normal)\n    button.setTitleColor(.white, for: .normal)\n    button.layer.cornerRadius = 8\n    button.layer.masksToBounds = true\n    \n    return button\n}()",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.typename" : "UIButton",
            "key.typeusr" : "$sSo8UIButtonCD",
            "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC14downloadButton33_48D2358D0FF7C3EBFCAC272E65EDAA2FLLSo8UIButtonCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let webView: <Type usr=\"c:objc(cs)WKWebView\">WKWebView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1237
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>webView<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)WKWebView\">WKWebView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 157,
            "key.line" : 41,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "webView",
            "key.namelength" : 7,
            "key.nameoffset" : 1249,
            "key.offset" : 1245,
            "key.parsed_declaration" : "private let webView: WKWebView = {\n    let webView = WKWebView()\n    webView.translatesAutoresizingMaskIntoConstraints = false\n    return webView\n}()",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 41,
            "key.typename" : "WKWebView",
            "key.typeusr" : "$sSo9WKWebViewCD",
            "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC03webE033_48D2358D0FF7C3EBFCAC272E65EDAA2FLLSo05WKWebE0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLoad()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 1412
              }
            ],
            "key.bodylength" : 351,
            "key.bodyoffset" : 1441,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLoad<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 372,
            "key.line" : 47,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLoad()",
            "key.namelength" : 13,
            "key.nameoffset" : 1426,
            "key.offset" : 1421,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLoad"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLoad()",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 47,
            "key.substructure" : [

            ],
            "key.typename" : "(TitlePreviewViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitlePreviewViewController(im)viewDidLoad"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func configureConstraints()<\/Declaration>",
            "key.bodylength" : 1596,
            "key.bodyoffset" : 1832,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>configureConstraints<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1626,
            "key.line" : 61,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "configureConstraints()",
            "key.namelength" : 22,
            "key.nameoffset" : 1808,
            "key.offset" : 1803,
            "key.parsed_declaration" : "func configureConstraints()",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 61,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let webViewConstraints: [<Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>webViewConstraints<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 334,
                "key.line" : 63,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "webViewConstraints",
                "key.namelength" : 18,
                "key.nameoffset" : 1854,
                "key.offset" : 1850,
                "key.parsed_declaration" : "let webViewConstraints = [\n    webView.topAnchor.constraint(equalTo: view.topAnchor,constant: 50),\n    webView.leadingAnchor.constraint(equalTo: view.leadingAnchor),\n    webView.trailingAnchor.constraint(equalTo: view.trailingAnchor),\n    webView.heightAnchor.constraint(equalToConstant: 300)\n]",
                "key.parsed_scope.end" : 63,
                "key.parsed_scope.start" : 63,
                "key.typename" : "[NSLayoutConstraint]",
                "key.typeusr" : "$sSaySo18NSLayoutConstraintCGD",
                "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC20configureConstraintsyyF03webeH0L_SaySo18NSLayoutConstraintCGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let titleLabelConstraints: [<Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>titleLabelConstraints<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 220,
                "key.line" : 70,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "titleLabelConstraints",
                "key.namelength" : 21,
                "key.nameoffset" : 2206,
                "key.offset" : 2202,
                "key.parsed_declaration" : "let titleLabelConstraints = [\n    titleLabel.topAnchor.constraint(equalTo: webView.bottomAnchor, constant: 20),\n    titleLabel.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20)\n]",
                "key.parsed_scope.end" : 70,
                "key.parsed_scope.start" : 70,
                "key.typename" : "[NSLayoutConstraint]",
                "key.typeusr" : "$sSaySo18NSLayoutConstraintCGD",
                "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC20configureConstraintsyyF010titleLabelH0L_SaySo18NSLayoutConstraintCGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let overviewLabelConstraints: [<Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>overviewLabelConstraints<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 315,
                "key.line" : 75,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "overviewLabelConstraints",
                "key.namelength" : 24,
                "key.nameoffset" : 2444,
                "key.offset" : 2440,
                "key.parsed_declaration" : "let overviewLabelConstraints = [\n    overviewLabel.topAnchor.constraint(equalTo: titleLabel.bottomAnchor, constant: 15),\n    overviewLabel.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),\n    overviewLabel.trailingAnchor.constraint(equalTo: view.trailingAnchor)\n]",
                "key.parsed_scope.end" : 75,
                "key.parsed_scope.start" : 75,
                "key.typename" : "[NSLayoutConstraint]",
                "key.typeusr" : "$sSaySo18NSLayoutConstraintCGD",
                "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC20configureConstraintsyyF013overviewLabelH0L_SaySo18NSLayoutConstraintCGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let downloadButtonConstraints: [<Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>downloadButtonConstraints<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 383,
                "key.line" : 81,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "downloadButtonConstraints",
                "key.namelength" : 25,
                "key.nameoffset" : 2777,
                "key.offset" : 2773,
                "key.parsed_declaration" : "let downloadButtonConstraints = [\n    downloadButton.centerXAnchor.constraint(equalTo: view.centerXAnchor),\n    downloadButton.topAnchor.constraint(equalTo: overviewLabel.bottomAnchor, constant: 25),\n    downloadButton.widthAnchor.constraint(equalToConstant: 140),\n    downloadButton.heightAnchor.constraint(equalToConstant: 40)\n    \n]",
                "key.parsed_scope.end" : 81,
                "key.parsed_scope.start" : 81,
                "key.typename" : "[NSLayoutConstraint]",
                "key.typeusr" : "$sSaySo18NSLayoutConstraintCGD",
                "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC20configureConstraintsyyF014downloadButtonH0L_SaySo18NSLayoutConstraintCGvp"
              }
            ],
            "key.typename" : "(TitlePreviewViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC20configureConstraintsyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func configure(with model: <Type usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/Type>)<\/Declaration>",
            "key.bodylength" : 275,
            "key.bodyoffset" : 3489,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Controllers\/General\/TitlePreviewViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>configure<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>model<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 326,
            "key.line" : 97,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "configure(with:)",
            "key.namelength" : 44,
            "key.nameoffset" : 3444,
            "key.offset" : 3439,
            "key.parsed_declaration" : "func configure(with model: TitlePreviewViewModel)",
            "key.parsed_scope.end" : 105,
            "key.parsed_scope.start" : 97,
            "key.substructure" : [

            ],
            "key.typename" : "(TitlePreviewViewController) -> (TitlePreviewViewModel) -> ()",
            "key.typeusr" : "$s4withy13Netflix_Clone21TitlePreviewViewModelV_tcD",
            "key.usr" : "s:13Netflix_Clone26TitlePreviewViewControllerC9configure4withyAA0cdE5ModelV_tF"
          }
        ],
        "key.typename" : "TitlePreviewViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone26TitlePreviewViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitlePreviewViewController"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/MainTabBarViewController.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1168,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class MainTabBarViewController : <Type usr=\"c:objc(cs)UITabBarController\">UITabBarController<\/Type><\/Declaration>",
        "key.bodylength" : 998,
        "key.bodyoffset" : 167,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 147
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/MainTabBarViewController.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>MainTabBarViewController<\/decl.name> : <ref.class usr=\"c:objc(cs)UITabBarController\">UITabBarController<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UITabBarController"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1051,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "MainTabBarViewController",
        "key.namelength" : 24,
        "key.nameoffset" : 121,
        "key.offset" : 115,
        "key.parsed_declaration" : "class MainTabBarViewController: UITabBarController",
        "key.parsed_scope.end" : 38,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func viewDidLoad()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 173
              }
            ],
            "key.bodylength" : 959,
            "key.bodyoffset" : 202,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/MainTabBarViewController.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>viewDidLoad<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 980,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "viewDidLoad()",
            "key.namelength" : 13,
            "key.nameoffset" : 187,
            "key.offset" : 182,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIViewController(im)viewDidLoad"
              }
            ],
            "key.parsed_declaration" : "override func viewDidLoad()",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 12,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let vc1: <Type usr=\"c:objc(cs)UINavigationController\">UINavigationController<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/MainTabBarViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>vc1<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UINavigationController\">UINavigationController<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 74,
                "key.line" : 17,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "vc1",
                "key.namelength" : 3,
                "key.nameoffset" : 298,
                "key.offset" : 294,
                "key.parsed_declaration" : "let vc1 = UINavigationController(rootViewController: HomeViewController())",
                "key.parsed_scope.end" : 17,
                "key.parsed_scope.start" : 17,
                "key.typename" : "UINavigationController",
                "key.typeusr" : "$sSo22UINavigationControllerCD",
                "key.usr" : "s:13Netflix_Clone24MainTabBarViewControllerC11viewDidLoadyyF3vc1L_So012UINavigationG0Cvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let vc2: <Type usr=\"c:objc(cs)UINavigationController\">UINavigationController<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/MainTabBarViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>vc2<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UINavigationController\">UINavigationController<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 78,
                "key.line" : 18,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "vc2",
                "key.namelength" : 3,
                "key.nameoffset" : 381,
                "key.offset" : 377,
                "key.parsed_declaration" : "let vc2 = UINavigationController(rootViewController: UpcomingViewController())",
                "key.parsed_scope.end" : 18,
                "key.parsed_scope.start" : 18,
                "key.typename" : "UINavigationController",
                "key.typeusr" : "$sSo22UINavigationControllerCD",
                "key.usr" : "s:13Netflix_Clone24MainTabBarViewControllerC11viewDidLoadyyF3vc2L_So012UINavigationG0Cvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let vc3: <Type usr=\"c:objc(cs)UINavigationController\">UINavigationController<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/MainTabBarViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>vc3<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UINavigationController\">UINavigationController<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 76,
                "key.line" : 19,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "vc3",
                "key.namelength" : 3,
                "key.nameoffset" : 468,
                "key.offset" : 464,
                "key.parsed_declaration" : "let vc3 = UINavigationController(rootViewController: SearchViewController())",
                "key.parsed_scope.end" : 19,
                "key.parsed_scope.start" : 19,
                "key.typename" : "UINavigationController",
                "key.typeusr" : "$sSo22UINavigationControllerCD",
                "key.usr" : "s:13Netflix_Clone24MainTabBarViewControllerC11viewDidLoadyyF3vc3L_So012UINavigationG0Cvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let vc4: <Type usr=\"c:objc(cs)UINavigationController\">UINavigationController<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/MainTabBarViewController.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>vc4<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UINavigationController\">UINavigationController<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 79,
                "key.line" : 20,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "vc4",
                "key.namelength" : 3,
                "key.nameoffset" : 553,
                "key.offset" : 549,
                "key.parsed_declaration" : "let vc4 = UINavigationController(rootViewController: DownloadsViewController())",
                "key.parsed_scope.end" : 20,
                "key.parsed_scope.start" : 20,
                "key.typename" : "UINavigationController",
                "key.typeusr" : "$sSo22UINavigationControllerCD",
                "key.usr" : "s:13Netflix_Clone24MainTabBarViewControllerC11viewDidLoadyyF3vc4L_So012UINavigationG0Cvp"
              }
            ],
            "key.typename" : "(MainTabBarViewController) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)MainTabBarViewController(im)viewDidLoad"
          }
        ],
        "key.typename" : "MainTabBarViewController.Type",
        "key.typeusr" : "$s13Netflix_Clone24MainTabBarViewControllerCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)MainTabBarViewController"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 7411,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct Constants<\/Declaration>",
        "key.bodylength" : 278,
        "key.bodyoffset" : 133,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Constants<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 297,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "Constants",
        "key.namelength" : 9,
        "key.nameoffset" : 122,
        "key.offset" : 115,
        "key.parsed_declaration" : "struct Constants",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let API_KEY: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>API_KEY<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 55,
            "key.line" : 11,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "API_KEY",
            "key.namelength" : 7,
            "key.nameoffset" : 149,
            "key.offset" : 138,
            "key.parsed_declaration" : "static let API_KEY = \"8765536cf9830a3ff1945261baabe026\"",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone9ConstantsV7API_KEYSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let baseURL: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>baseURL<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 49,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "baseURL",
            "key.namelength" : 7,
            "key.nameoffset" : 209,
            "key.offset" : 198,
            "key.parsed_declaration" : "static let baseURL = \"https:\/\/api.themoviedb.org\"",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone9ConstantsV7baseURLSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let YoutubeAPI_KEY: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>YoutubeAPI_KEY<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 69,
            "key.line" : 13,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "YoutubeAPI_KEY",
            "key.namelength" : 14,
            "key.nameoffset" : 263,
            "key.offset" : 252,
            "key.parsed_declaration" : "static let YoutubeAPI_KEY = \"AIzaSyAcS1EKWxsABALnlkGuuL_uYmuul6_bs7Q\"",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone9ConstantsV14YoutubeAPI_KEYSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let YoutubeBaseURL: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>YoutubeBaseURL<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 79,
            "key.line" : 14,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "YoutubeBaseURL",
            "key.namelength" : 14,
            "key.nameoffset" : 337,
            "key.offset" : 326,
            "key.parsed_declaration" : "static let YoutubeBaseURL = \"https:\/\/youtube.googleapis.com\/youtube\/v3\/search?\"",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone9ConstantsV14YoutubeBaseURLSSvpZ"
          }
        ],
        "key.typename" : "Constants.Type",
        "key.typeusr" : "$s13Netflix_Clone9ConstantsVmD",
        "key.usr" : "s:13Netflix_Clone9ConstantsV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>enum APIError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.bodylength" : 31,
        "key.bodyoffset" : 436,
        "key.column" : 6,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 429
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>APIError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Error"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 54,
        "key.line" : 18,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "APIError",
        "key.namelength" : 8,
        "key.nameoffset" : 419,
        "key.offset" : 414,
        "key.parsed_declaration" : "enum APIError: Error",
        "key.parsed_scope.end" : 21,
        "key.parsed_scope.start" : 18,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 20,
            "key.offset" : 446,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case failedToGetData<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>failedToGetData<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 15,
                "key.line" : 20,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "failedToGetData",
                "key.namelength" : 15,
                "key.nameoffset" : 451,
                "key.offset" : 451,
                "key.parsed_declaration" : "case failedToGetData",
                "key.parsed_scope.end" : 20,
                "key.parsed_scope.start" : 20,
                "key.typename" : "(APIError.Type) -> APIError",
                "key.typeusr" : "$sy13Netflix_Clone8APIErrorOACmcD",
                "key.usr" : "s:13Netflix_Clone8APIErrorO15failedToGetDatayA2CmF"
              }
            ]
          }
        ],
        "key.typename" : "APIError.Type",
        "key.typeusr" : "$s13Netflix_Clone8APIErrorOmD",
        "key.usr" : "s:13Netflix_Clone8APIErrorO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class APICaller<\/Declaration>",
        "key.bodylength" : 6916,
        "key.bodyoffset" : 487,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>APICaller<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 6934,
        "key.line" : 23,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "APICaller",
        "key.namelength" : 9,
        "key.nameoffset" : 476,
        "key.offset" : 470,
        "key.parsed_declaration" : "class APICaller",
        "key.parsed_scope.end" : 192,
        "key.parsed_scope.start" : 23,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let shared: <Type usr=\"s:13Netflix_Clone9APICallerC\">APICaller<\/Type><\/Declaration>",
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>shared<\/decl.name>: <decl.var.type><ref.class usr=\"s:13Netflix_Clone9APICallerC\">APICaller<\/ref.class><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 31,
            "key.line" : 25,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "shared",
            "key.namelength" : 6,
            "key.nameoffset" : 508,
            "key.offset" : 497,
            "key.parsed_declaration" : "static let shared = APICaller()",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.typename" : "APICaller",
            "key.typeusr" : "$s13Netflix_Clone9APICallerCD",
            "key.usr" : "s:13Netflix_Clone9APICallerC6sharedACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func getTrendingMovies(completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;[<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>], <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 1002,
            "key.bodyoffset" : 617,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getTrendingMovies<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>], <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1082,
            "key.line" : 27,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "getTrendingMovies(completion:)",
            "key.namelength" : 73,
            "key.nameoffset" : 543,
            "key.offset" : 538,
            "key.parsed_declaration" : "func getTrendingMovies(completion: @escaping (Result<[Title], Error>) -> Void)",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 27,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 791,
                "key.line" : 32,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "task",
                "key.namelength" : 4,
                "key.nameoffset" : 805,
                "key.offset" : 801,
                "key.parsed_declaration" : "let task = URLSession.shared.dataTask(with: URLRequest(url: url)) { data, _ , error in\n    \n    guard let data = data, error == nil else {\n        return\n    }\n    do{\n        \n        \/\/            let results = try JSONSerialization.jsonObject(with: data, options: .fragmentsAllowed)\n        \/\/                print(results)\n        let results = try JSONDecoder().decode(TrendingTitlesResponse.self, from:  data)\n        \/\/                print(results.results[10].original_name)\n        completion(.success(results.results))\n    }catch{\n        \/\/                print(error.localizedDescription)\n        completion(.failure(APIError.failedToGetData))\n    }\n}",
                "key.parsed_scope.end" : 32,
                "key.parsed_scope.start" : 32,
                "key.typename" : "URLSessionDataTask",
                "key.typeusr" : "$sSo20NSURLSessionDataTaskCD",
                "key.usr" : "s:13Netflix_Clone9APICallerC17getTrendingMovies10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF4taskL_So20NSURLSessionDataTaskCvp"
              }
            ],
            "key.typename" : "(APICaller) -> (@escaping (Result<[Title], Error>) -> ()) -> ()",
            "key.typeusr" : "$s10completionyys6ResultOySay13Netflix_Clone5TitleVGs5Error_pGc_tcD",
            "key.usr" : "s:13Netflix_Clone9APICallerC17getTrendingMovies10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func getTrendingTVs(completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;[<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>], <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 724,
            "key.bodyoffset" : 1706,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getTrendingTVs<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>], <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 801,
            "key.line" : 52,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "getTrendingTVs(completion:)",
            "key.namelength" : 69,
            "key.nameoffset" : 1635,
            "key.offset" : 1630,
            "key.parsed_declaration" : "func getTrendingTVs(completion: @escaping(Result<[Title], Error>) -> Void)",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 52,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 506,
                "key.line" : 57,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "task",
                "key.namelength" : 4,
                "key.nameoffset" : 1892,
                "key.offset" : 1888,
                "key.parsed_declaration" : "let task = URLSession.shared.dataTask(with: URLRequest(url: url)) { data, _ , error in\n    \n    guard let data = data, error == nil else{\n        return\n    }\n    \n    do{\n        let results = try JSONDecoder().decode(TrendingTitlesResponse.self, from: data)\n        completion(.success(results.results))\n        \n    }\n    catch{\n        completion(.failure(APIError.failedToGetData))\n    }\n}",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.typename" : "URLSessionDataTask",
                "key.typeusr" : "$sSo20NSURLSessionDataTaskCD",
                "key.usr" : "s:13Netflix_Clone9APICallerC14getTrendingTVs10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF4taskL_So20NSURLSessionDataTaskCvp"
              }
            ],
            "key.typename" : "(APICaller) -> (@escaping (Result<[Title], Error>) -> ()) -> ()",
            "key.typeusr" : "$s10completionyys6ResultOySay13Netflix_Clone5TitleVGs5Error_pGc_tcD",
            "key.usr" : "s:13Netflix_Clone9APICallerC14getTrendingTVs10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func getUpcomingMovies(completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;[<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>], <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 657,
            "key.bodyoffset" : 2520,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getUpcomingMovies<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>], <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 737,
            "key.line" : 76,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "getUpcomingMovies(completion:)",
            "key.namelength" : 72,
            "key.nameoffset" : 2446,
            "key.offset" : 2441,
            "key.parsed_declaration" : "func getUpcomingMovies(completion: @escaping(Result<[Title], Error>) -> Void)",
            "key.parsed_scope.end" : 92,
            "key.parsed_scope.start" : 76,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 468,
                "key.line" : 79,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "task",
                "key.namelength" : 4,
                "key.nameoffset" : 2686,
                "key.offset" : 2682,
                "key.parsed_declaration" : "let task = URLSession.shared.dataTask(with: URLRequest(url: url)) { data, _ , error in\n    guard let data = data, error == nil else { return }\n    \n    do {\n        let results = try JSONDecoder().decode(TrendingTitlesResponse.self, from: data)\n        completion(.success(results.results))\n    }\n    catch {\n        completion(.failure(APIError.failedToGetData))\n        \n    }\n}",
                "key.parsed_scope.end" : 79,
                "key.parsed_scope.start" : 79,
                "key.typename" : "URLSessionDataTask",
                "key.typeusr" : "$sSo20NSURLSessionDataTaskCD",
                "key.usr" : "s:13Netflix_Clone9APICallerC17getUpcomingMovies10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF4taskL_So20NSURLSessionDataTaskCvp"
              }
            ],
            "key.typename" : "(APICaller) -> (@escaping (Result<[Title], Error>) -> ()) -> ()",
            "key.typeusr" : "$s10completionyys6ResultOySay13Netflix_Clone5TitleVGs5Error_pGc_tcD",
            "key.usr" : "s:13Netflix_Clone9APICallerC17getUpcomingMovies10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func getTopRated(completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;[<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>], <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 647,
            "key.bodyoffset" : 3262,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getTopRated<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>], <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 722,
            "key.line" : 94,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "getTopRated(completion:)",
            "key.namelength" : 67,
            "key.nameoffset" : 3193,
            "key.offset" : 3188,
            "key.parsed_declaration" : "func getTopRated(completion: @escaping(Result<[Title], Error>) -> Void )",
            "key.parsed_scope.end" : 110,
            "key.parsed_scope.start" : 94,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 448,
                "key.line" : 97,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "task",
                "key.namelength" : 4,
                "key.nameoffset" : 3429,
                "key.offset" : 3425,
                "key.parsed_declaration" : "let task = URLSession.shared.dataTask(with: URLRequest(url: url)){data, _, error in\n    guard let data = data , error == nil else { return }\n    \n    do {\n        let results = try JSONDecoder().decode(TrendingTitlesResponse.self, from: data)\n        completion(.success(results.results))\n    }\n    catch{\n        completion(.failure(APIError.failedToGetData))\n    }\n}",
                "key.parsed_scope.end" : 97,
                "key.parsed_scope.start" : 97,
                "key.typename" : "URLSessionDataTask",
                "key.typeusr" : "$sSo20NSURLSessionDataTaskCD",
                "key.usr" : "s:13Netflix_Clone9APICallerC11getTopRated10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF4taskL_So20NSURLSessionDataTaskCvp"
              }
            ],
            "key.typename" : "(APICaller) -> (@escaping (Result<[Title], Error>) -> ()) -> ()",
            "key.typeusr" : "$s10completionyys6ResultOySay13Netflix_Clone5TitleVGs5Error_pGc_tcD",
            "key.usr" : "s:13Netflix_Clone9APICallerC11getTopRated10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func getPopular(completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;[<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>], <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 645,
            "key.bodyoffset" : 3993,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getPopular<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>], <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 719,
            "key.line" : 112,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "getPopular(completion:)",
            "key.namelength" : 66,
            "key.nameoffset" : 3925,
            "key.offset" : 3920,
            "key.parsed_declaration" : "func getPopular(completion: @escaping(Result<[Title], Error>) -> Void )",
            "key.parsed_scope.end" : 128,
            "key.parsed_scope.start" : 112,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 448,
                "key.line" : 115,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "task",
                "key.namelength" : 4,
                "key.nameoffset" : 4158,
                "key.offset" : 4154,
                "key.parsed_declaration" : "let task = URLSession.shared.dataTask(with: URLRequest(url: url)){data, _, error in\n    guard let data = data , error == nil else { return }\n    \n    do {\n        let results = try JSONDecoder().decode(TrendingTitlesResponse.self, from: data)\n        completion(.success(results.results))\n    }\n    catch{\n        completion(.failure(APIError.failedToGetData))\n    }\n}",
                "key.parsed_scope.end" : 115,
                "key.parsed_scope.start" : 115,
                "key.typename" : "URLSessionDataTask",
                "key.typeusr" : "$sSo20NSURLSessionDataTaskCD",
                "key.usr" : "s:13Netflix_Clone9APICallerC10getPopular10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF4taskL_So20NSURLSessionDataTaskCvp"
              }
            ],
            "key.typename" : "(APICaller) -> (@escaping (Result<[Title], Error>) -> ()) -> ()",
            "key.typeusr" : "$s10completionyys6ResultOySay13Netflix_Clone5TitleVGs5Error_pGc_tcD",
            "key.usr" : "s:13Netflix_Clone9APICallerC10getPopular10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func getSearchMovies(completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;[<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>], <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 810,
            "key.bodyoffset" : 4726,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getSearchMovies<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>], <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 888,
            "key.line" : 130,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "getSearchMovies(completion:)",
            "key.namelength" : 70,
            "key.nameoffset" : 4654,
            "key.offset" : 4649,
            "key.parsed_declaration" : "func getSearchMovies(completion: @escaping(Result<[Title], Error>) -> Void)",
            "key.parsed_scope.end" : 149,
            "key.parsed_scope.start" : 130,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 477,
                "key.line" : 134,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "task",
                "key.namelength" : 4,
                "key.nameoffset" : 5027,
                "key.offset" : 5023,
                "key.parsed_declaration" : "let task = URLSession.shared.dataTask(with: URLRequest(url: url)){ data, _ , error in\n    \n    guard let data = data , error == nil else { return }\n    do{\n        let result = try JSONDecoder().decode(TrendingTitlesResponse.self, from: data)\n        completion(.success(result.results))\n    }\n    catch{\n        completion(.failure(APIError.failedToGetData))\n        \n    }\n    \n}",
                "key.parsed_scope.end" : 134,
                "key.parsed_scope.start" : 134,
                "key.typename" : "URLSessionDataTask",
                "key.typeusr" : "$sSo20NSURLSessionDataTaskCD",
                "key.usr" : "s:13Netflix_Clone9APICallerC15getSearchMovies10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF4taskL_So20NSURLSessionDataTaskCvp"
              }
            ],
            "key.typename" : "(APICaller) -> (@escaping (Result<[Title], Error>) -> ()) -> ()",
            "key.typeusr" : "$s10completionyys6ResultOySay13Netflix_Clone5TitleVGs5Error_pGc_tcD",
            "key.usr" : "s:13Netflix_Clone9APICallerC15getSearchMovies10completionyys6ResultOySayAA5TitleVGs5Error_pGc_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func search(with query: <Type usr=\"s:SS\">String<\/Type>, completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;[<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>], <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 754,
            "key.bodyoffset" : 5635,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>search<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>query<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>], <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 843,
            "key.line" : 151,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "search(with:completion:)",
            "key.namelength" : 81,
            "key.nameoffset" : 5552,
            "key.offset" : 5547,
            "key.parsed_declaration" : "func search(with query: String, completion: @escaping(Result<[Title], Error>) -> Void)",
            "key.parsed_scope.end" : 168,
            "key.parsed_scope.start" : 151,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 464,
                "key.line" : 154,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "task",
                "key.namelength" : 4,
                "key.nameoffset" : 5893,
                "key.offset" : 5889,
                "key.parsed_declaration" : "let task = URLSession.shared.dataTask(with: URLRequest(url: url)){ data, _ , error in\n    guard let data = data , error == nil else { return }\n    do{\n        let result = try JSONDecoder().decode(TrendingTitlesResponse.self, from: data)\n        completion(.success(result.results))\n    }\n    catch{\n        completion(.failure(APIError.failedToGetData))\n        \n    }\n    \n}",
                "key.parsed_scope.end" : 154,
                "key.parsed_scope.start" : 154,
                "key.typename" : "URLSessionDataTask",
                "key.typeusr" : "$sSo20NSURLSessionDataTaskCD",
                "key.usr" : "s:13Netflix_Clone9APICallerC6search4with10completionySS_ys6ResultOySayAA5TitleVGs5Error_pGctF4taskL_So20NSURLSessionDataTaskCvp"
              }
            ],
            "key.typename" : "(APICaller) -> (String, @escaping (Result<[Title], Error>) -> ()) -> ()",
            "key.typeusr" : "$s4with10completionySS_ys6ResultOySay13Netflix_Clone5TitleVGs5Error_pGctcD",
            "key.usr" : "s:13Netflix_Clone9APICallerC6search4with10completionySS_ys6ResultOySayAA5TitleVGs5Error_pGctF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func getMovie(with query: <Type usr=\"s:SS\">String<\/Type>, completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;<Type usr=\"s:13Netflix_Clone12VideoElementV\">VideoElement<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 891,
            "key.bodyoffset" : 6500,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getMovie<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>query<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;<ref.struct usr=\"s:13Netflix_Clone12VideoElementV\">VideoElement<\/ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 987,
            "key.line" : 171,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "getMovie(with:completion:)",
            "key.namelength" : 88,
            "key.nameoffset" : 6410,
            "key.offset" : 6405,
            "key.parsed_declaration" : "func getMovie(with query: String, completion: @escaping(Result<VideoElement, Error>) -> Void)",
            "key.parsed_scope.end" : 189,
            "key.parsed_scope.start" : 171,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/APICaller.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>task<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 611,
                "key.line" : 175,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "task",
                "key.namelength" : 4,
                "key.nameoffset" : 6757,
                "key.offset" : 6753,
                "key.parsed_declaration" : "let task = URLSession.shared.dataTask(with: URLRequest(url: url)){ data, _ , error in\n            guard let data = data, error == nil else { return }\n            do {\n\/\/                let results = try JSONSerialization.jsonObject(with: data, options: .fragmentsAllowed)\n                \n                let results = try JSONDecoder().decode(YoutubeSearchResponse.self, from: data)\n                completion(.success(results.items[0]))\n\/\/                print(results)\n            } catch {\n                completion(.failure(error))\n                print(error.localizedDescription)\n            }\n        }",
                "key.parsed_scope.end" : 175,
                "key.parsed_scope.start" : 175,
                "key.typename" : "URLSessionDataTask",
                "key.typeusr" : "$sSo20NSURLSessionDataTaskCD",
                "key.usr" : "s:13Netflix_Clone9APICallerC8getMovie4with10completionySS_ys6ResultOyAA12VideoElementVs5Error_pGctF4taskL_So20NSURLSessionDataTaskCvp"
              }
            ],
            "key.typename" : "(APICaller) -> (String, @escaping (Result<VideoElement, Error>) -> ()) -> ()",
            "key.typeusr" : "$s4with10completionySS_ys6ResultOy13Netflix_Clone12VideoElementVs5Error_pGctcD",
            "key.usr" : "s:13Netflix_Clone9APICallerC8getMovie4with10completionySS_ys6ResultOyAA12VideoElementVs5Error_pGctF"
          }
        ],
        "key.typename" : "APICaller.Type",
        "key.typeusr" : "$s13Netflix_Clone9APICallerCmD",
        "key.usr" : "s:13Netflix_Clone9APICallerC"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2522,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class DataPersistenceManager<\/Declaration>",
        "key.bodylength" : 2333,
        "key.bodyoffset" : 187,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>DataPersistenceManager<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 2364,
        "key.line" : 12,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "DataPersistenceManager",
        "key.namelength" : 22,
        "key.nameoffset" : 163,
        "key.offset" : 157,
        "key.parsed_declaration" : "class DataPersistenceManager",
        "key.parsed_scope.end" : 89,
        "key.parsed_scope.start" : 12,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>enum <Type usr=\"s:13Netflix_Clone22DataPersistenceManagerC\">DataPersistenceManager<\/Type>.DatabaseError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.bodylength" : 98,
            "key.bodyoffset" : 224,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 5,
                "key.offset" : 217
              }
            ],
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:13Netflix_Clone22DataPersistenceManagerC\">DataPersistenceManager<\/ref.class>.<decl.name>DatabaseError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Error"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 126,
            "key.line" : 14,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "DatabaseError",
            "key.namelength" : 13,
            "key.nameoffset" : 202,
            "key.offset" : 197,
            "key.parsed_declaration" : "enum DatabaseError: Error",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 14,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 21,
                "key.offset" : 233,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case failedToSaveData<\/Declaration>",
                    "key.column" : 14,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>failedToSaveData<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 16,
                    "key.line" : 15,
                    "key.modulename" : "Netflix_Clone",
                    "key.name" : "failedToSaveData",
                    "key.namelength" : 16,
                    "key.nameoffset" : 238,
                    "key.offset" : 238,
                    "key.parsed_declaration" : "case failedToSaveData",
                    "key.parsed_scope.end" : 15,
                    "key.parsed_scope.start" : 15,
                    "key.typename" : "(DataPersistenceManager.DatabaseError.Type) -> DataPersistenceManager.DatabaseError",
                    "key.typeusr" : "$sy13Netflix_Clone22DataPersistenceManagerC13DatabaseErrorOAEmcD",
                    "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC13DatabaseErrorO012failedToSaveC0yA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 22,
                "key.offset" : 263,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case failedToFetchData<\/Declaration>",
                    "key.column" : 14,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>failedToFetchData<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 17,
                    "key.line" : 16,
                    "key.modulename" : "Netflix_Clone",
                    "key.name" : "failedToFetchData",
                    "key.namelength" : 17,
                    "key.nameoffset" : 268,
                    "key.offset" : 268,
                    "key.parsed_declaration" : "case failedToFetchData",
                    "key.parsed_scope.end" : 16,
                    "key.parsed_scope.start" : 16,
                    "key.typename" : "(DataPersistenceManager.DatabaseError.Type) -> DataPersistenceManager.DatabaseError",
                    "key.typeusr" : "$sy13Netflix_Clone22DataPersistenceManagerC13DatabaseErrorOAEmcD",
                    "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC13DatabaseErrorO013failedToFetchC0yA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 23,
                "key.offset" : 294,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case failedToDeleteData<\/Declaration>",
                    "key.column" : 14,
                    "key.decl_lang" : "source.lang.swift",
                    "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>failedToDeleteData<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 18,
                    "key.line" : 17,
                    "key.modulename" : "Netflix_Clone",
                    "key.name" : "failedToDeleteData",
                    "key.namelength" : 18,
                    "key.nameoffset" : 299,
                    "key.offset" : 299,
                    "key.parsed_declaration" : "case failedToDeleteData",
                    "key.parsed_scope.end" : 17,
                    "key.parsed_scope.start" : 17,
                    "key.typename" : "(DataPersistenceManager.DatabaseError.Type) -> DataPersistenceManager.DatabaseError",
                    "key.typeusr" : "$sy13Netflix_Clone22DataPersistenceManagerC13DatabaseErrorOAEmcD",
                    "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC13DatabaseErrorO014failedToDeleteC0yA2EmF"
                  }
                ]
              }
            ],
            "key.typename" : "DataPersistenceManager.DatabaseError.Type",
            "key.typeusr" : "$s13Netflix_Clone22DataPersistenceManagerC13DatabaseErrorOmD",
            "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC13DatabaseErrorO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let shared: <Type usr=\"s:13Netflix_Clone22DataPersistenceManagerC\">DataPersistenceManager<\/Type><\/Declaration>",
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>shared<\/decl.name>: <decl.var.type><ref.class usr=\"s:13Netflix_Clone22DataPersistenceManagerC\">DataPersistenceManager<\/ref.class><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 44,
            "key.line" : 20,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "shared",
            "key.namelength" : 6,
            "key.nameoffset" : 344,
            "key.offset" : 333,
            "key.parsed_declaration" : "static let shared = DataPersistenceManager()",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.typename" : "DataPersistenceManager",
            "key.typeusr" : "$s13Netflix_Clone22DataPersistenceManagerCD",
            "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC6sharedACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func downloadTitleWith(model: <Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>, completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 886,
            "key.bodyoffset" : 477,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>downloadTitleWith<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>, <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 977,
            "key.line" : 22,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "downloadTitleWith(model:completion:)",
            "key.namelength" : 83,
            "key.nameoffset" : 392,
            "key.offset" : 387,
            "key.parsed_declaration" : "func downloadTitleWith(model: Title, completion: @escaping (Result<Void,Error>) -> Void)",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 22,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let context: <Type usr=\"c:objc(cs)NSManagedObjectContext\">NSManagedObjectContext<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>context<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSManagedObjectContext\">NSManagedObjectContext<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 57,
                "key.line" : 27,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "context",
                "key.namelength" : 7,
                "key.nameoffset" : 613,
                "key.offset" : 609,
                "key.parsed_declaration" : "let context = appDelegate.persistentContainer.viewContext",
                "key.parsed_scope.end" : 27,
                "key.parsed_scope.start" : 27,
                "key.typename" : "NSManagedObjectContext",
                "key.typeusr" : "$sSo22NSManagedObjectContextCD",
                "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC17downloadTitleWith5model10completionyAA0G0V_ys6ResultOyyts5Error_pGctF7contextL_So22NSManagedObjectContextCvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let item: <Type usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>item<\/decl.name>: <decl.var.type><ref.class usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 38,
                "key.line" : 29,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "item",
                "key.namelength" : 4,
                "key.nameoffset" : 688,
                "key.offset" : 684,
                "key.parsed_declaration" : "let item = TitleItem(context: context)",
                "key.parsed_scope.end" : 29,
                "key.parsed_scope.start" : 29,
                "key.typename" : "TitleItem",
                "key.typeusr" : "$s13Netflix_Clone9TitleItemCD",
                "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC17downloadTitleWith5model10completionyAA0G0V_ys6ResultOyyts5Error_pGctF4itemL_AA0G4ItemCvp"
              }
            ],
            "key.typename" : "(DataPersistenceManager) -> (Title, @escaping (Result<(), Error>) -> ()) -> ()",
            "key.typeusr" : "$s5model10completiony13Netflix_Clone5TitleV_ys6ResultOyyts5Error_pGctcD",
            "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC17downloadTitleWith5model10completionyAA0G0V_ys6ResultOyyts5Error_pGctF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func fetchingDataFromDataBase(completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;[<Type usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/Type>], <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 527,
            "key.bodyoffset" : 1463,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fetchingDataFromDataBase<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;[<ref.class usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/ref.class>], <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 617,
            "key.line" : 51,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "fetchingDataFromDataBase(completion:)",
            "key.namelength" : 83,
            "key.nameoffset" : 1379,
            "key.offset" : 1374,
            "key.parsed_declaration" : "func fetchingDataFromDataBase(completion: @escaping (Result<[TitleItem], Error>)-> Void)",
            "key.parsed_scope.end" : 70,
            "key.parsed_scope.start" : 51,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let context: <Type usr=\"c:objc(cs)NSManagedObjectContext\">NSManagedObjectContext<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>context<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSManagedObjectContext\">NSManagedObjectContext<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 57,
                "key.line" : 57,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "context",
                "key.namelength" : 7,
                "key.nameoffset" : 1608,
                "key.offset" : 1604,
                "key.parsed_declaration" : "let context = appDelegate.persistentContainer.viewContext",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.typename" : "NSManagedObjectContext",
                "key.typeusr" : "$sSo22NSManagedObjectContextCD",
                "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC08fetchingc4FromC4Base10completionyys6ResultOySayAA9TitleItemCGs5Error_pGc_tF7contextL_So22NSManagedObjectContextCvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let request: <Type usr=\"c:objc(cs)NSFetchRequest\">NSFetchRequest<\/Type>&lt;<Type usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/Type>&gt;<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>request<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSFetchRequest\">NSFetchRequest<\/ref.class>&lt;<ref.class usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/ref.class>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 38,
                "key.line" : 59,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "request",
                "key.namelength" : 7,
                "key.nameoffset" : 1683,
                "key.offset" : 1679,
                "key.parsed_declaration" : "let request: NSFetchRequest<TitleItem>",
                "key.parsed_scope.end" : 59,
                "key.parsed_scope.start" : 59,
                "key.typename" : "NSFetchRequest<TitleItem>",
                "key.typeusr" : "$sSo14NSFetchRequestCy13Netflix_Clone9TitleItemCGD",
                "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC08fetchingc4FromC4Base10completionyys6ResultOySayAA9TitleItemCGs5Error_pGc_tF7requestL_So14NSFetchRequestCyAIGvp"
              }
            ],
            "key.typename" : "(DataPersistenceManager) -> (@escaping (Result<[TitleItem], Error>) -> ()) -> ()",
            "key.typeusr" : "$s10completionyys6ResultOySay13Netflix_Clone9TitleItemCGs5Error_pGc_tcD",
            "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC08fetchingc4FromC4Base10completionyys6ResultOySayAA9TitleItemCGs5Error_pGc_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func deleteTitleWith(model: <Type usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/Type>, completion: @escaping (<Type usr=\"s:s6ResultO\">Result<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type>&gt;) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
            "key.bodylength" : 425,
            "key.bodyoffset" : 2093,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>deleteTitleWith<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>model<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:s6ResultO\">Result<\/ref.enum>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>, <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 518,
            "key.line" : 72,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "deleteTitleWith(model:completion:)",
            "key.namelength" : 85,
            "key.nameoffset" : 2006,
            "key.offset" : 2001,
            "key.parsed_declaration" : "func deleteTitleWith(model: TitleItem, completion: @escaping (Result<Void,Error>) -> Void)",
            "key.parsed_scope.end" : 88,
            "key.parsed_scope.start" : 72,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let context: <Type usr=\"c:objc(cs)NSManagedObjectContext\">NSManagedObjectContext<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Managers\/DataPersistenceManager.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>context<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSManagedObjectContext\">NSManagedObjectContext<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 57,
                "key.line" : 78,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "context",
                "key.namelength" : 7,
                "key.nameoffset" : 2238,
                "key.offset" : 2234,
                "key.parsed_declaration" : "let context = appDelegate.persistentContainer.viewContext",
                "key.parsed_scope.end" : 78,
                "key.parsed_scope.start" : 78,
                "key.typename" : "NSManagedObjectContext",
                "key.typeusr" : "$sSo22NSManagedObjectContextCD",
                "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC15deleteTitleWith5model10completionyAA0G4ItemC_ys6ResultOyyts5Error_pGctF7contextL_So22NSManagedObjectContextCvp"
              }
            ],
            "key.typename" : "(DataPersistenceManager) -> (TitleItem, @escaping (Result<(), Error>) -> ()) -> ()",
            "key.typeusr" : "$s5model10completiony13Netflix_Clone9TitleItemC_ys6ResultOyyts5Error_pGctcD",
            "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC15deleteTitleWith5model10completionyAA0G4ItemC_ys6ResultOyyts5Error_pGctF"
          }
        ],
        "key.typename" : "DataPersistenceManager.Type",
        "key.typeusr" : "$s13Netflix_Clone22DataPersistenceManagerCmD",
        "key.usr" : "s:13Netflix_Clone22DataPersistenceManagerC"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 456,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct TrendingTitlesResponse : <Type usr=\"s:s7Codablea\">Codable<\/Type><\/Declaration>",
        "key.bodylength" : 31,
        "key.bodyoffset" : 152,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 143
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>TrendingTitlesResponse<\/decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Codable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 72,
        "key.line" : 11,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "TrendingTitlesResponse",
        "key.namelength" : 22,
        "key.nameoffset" : 119,
        "key.offset" : 112,
        "key.parsed_declaration" : "struct TrendingTitlesResponse: Codable",
        "key.parsed_scope.end" : 14,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let results: [<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>]<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>results<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.line" : 13,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "results",
            "key.namelength" : 7,
            "key.nameoffset" : 166,
            "key.offset" : 162,
            "key.parsed_declaration" : "let results: [Title]",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.typename" : "[Title]",
            "key.typeusr" : "$sSay13Netflix_Clone5TitleVGD",
            "key.usr" : "s:13Netflix_Clone22TrendingTitlesResponseV7resultsSayAA5TitleVGvp"
          }
        ],
        "key.typename" : "TrendingTitlesResponse.Type",
        "key.typeusr" : "$s13Netflix_Clone22TrendingTitlesResponseVmD",
        "key.usr" : "s:13Netflix_Clone22TrendingTitlesResponseV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct Title : <Type usr=\"s:s7Codablea\">Codable<\/Type><\/Declaration>",
        "key.bodylength" : 245,
        "key.bodyoffset" : 209,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 200
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Title<\/decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Codable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 269,
        "key.line" : 16,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "Title",
        "key.namelength" : 5,
        "key.nameoffset" : 193,
        "key.offset" : 186,
        "key.parsed_declaration" : "struct Title: Codable",
        "key.parsed_scope.end" : 26,
        "key.parsed_scope.start" : 16,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let id: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>id<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 11,
            "key.line" : 17,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "id",
            "key.namelength" : 2,
            "key.nameoffset" : 218,
            "key.offset" : 214,
            "key.parsed_declaration" : "let id: Int",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:13Netflix_Clone5TitleV2idSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let media_type: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>media_type<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.line" : 18,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "media_type",
            "key.namelength" : 10,
            "key.nameoffset" : 234,
            "key.offset" : 230,
            "key.parsed_declaration" : "let media_type: String?",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "s:13Netflix_Clone5TitleV10media_typeSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let original_name: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>original_name<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.line" : 19,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "original_name",
            "key.namelength" : 13,
            "key.nameoffset" : 262,
            "key.offset" : 258,
            "key.parsed_declaration" : "let original_name: String?",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "s:13Netflix_Clone5TitleV13original_nameSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let original_title: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>original_title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 20,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "original_title",
            "key.namelength" : 14,
            "key.nameoffset" : 293,
            "key.offset" : 289,
            "key.parsed_declaration" : "let original_title: String?",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "s:13Netflix_Clone5TitleV14original_titleSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let poster_path: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>poster_path<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.line" : 21,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "poster_path",
            "key.namelength" : 11,
            "key.nameoffset" : 325,
            "key.offset" : 321,
            "key.parsed_declaration" : "let poster_path:String?",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "s:13Netflix_Clone5TitleV11poster_pathSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let overview: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>overview<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.line" : 22,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "overview",
            "key.namelength" : 8,
            "key.nameoffset" : 353,
            "key.offset" : 349,
            "key.parsed_declaration" : "let overview: String?",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "s:13Netflix_Clone5TitleV8overviewSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let vote_count: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>vote_count<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 19,
            "key.line" : 23,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "vote_count",
            "key.namelength" : 10,
            "key.nameoffset" : 379,
            "key.offset" : 375,
            "key.parsed_declaration" : "let vote_count: Int",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:13Netflix_Clone5TitleV10vote_countSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let release_date: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>release_date<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.line" : 24,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "release_date",
            "key.namelength" : 12,
            "key.nameoffset" : 403,
            "key.offset" : 399,
            "key.parsed_declaration" : "let release_date: String?",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 24,
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "s:13Netflix_Clone5TitleV12release_dateSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let vote_average: <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/Title.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>vote_average<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.line" : 25,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "vote_average",
            "key.namelength" : 12,
            "key.nameoffset" : 433,
            "key.offset" : 429,
            "key.parsed_declaration" : "let vote_average: Double",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "s:13Netflix_Clone5TitleV12vote_averageSdvp"
          }
        ],
        "key.typename" : "Title.Type",
        "key.typeusr" : "$s13Netflix_Clone5TitleVmD",
        "key.usr" : "s:13Netflix_Clone5TitleV"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/YoutubeSearchResponse.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 339,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct YoutubeSearchResponse : <Type usr=\"s:s7Codablea\">Codable<\/Type><\/Declaration>",
        "key.bodylength" : 31,
        "key.bodyoffset" : 166,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 157
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/YoutubeSearchResponse.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>YoutubeSearchResponse<\/decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Codable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 71,
        "key.line" : 11,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "YoutubeSearchResponse",
        "key.namelength" : 21,
        "key.nameoffset" : 134,
        "key.offset" : 127,
        "key.parsed_declaration" : "struct YoutubeSearchResponse: Codable",
        "key.parsed_scope.end" : 13,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let items: [<Type usr=\"s:13Netflix_Clone12VideoElementV\">VideoElement<\/Type>]<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/YoutubeSearchResponse.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>items<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:13Netflix_Clone12VideoElementV\">VideoElement<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "items",
            "key.namelength" : 5,
            "key.nameoffset" : 175,
            "key.offset" : 171,
            "key.parsed_declaration" : "let items: [VideoElement]",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "[VideoElement]",
            "key.typeusr" : "$sSay13Netflix_Clone12VideoElementVGD",
            "key.usr" : "s:13Netflix_Clone21YoutubeSearchResponseV5itemsSayAA12VideoElementVGvp"
          }
        ],
        "key.typename" : "YoutubeSearchResponse.Type",
        "key.typeusr" : "$s13Netflix_Clone21YoutubeSearchResponseVmD",
        "key.usr" : "s:13Netflix_Clone21YoutubeSearchResponseV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct VideoElement : <Type usr=\"s:s7Codablea\">Codable<\/Type><\/Declaration>",
        "key.bodylength" : 28,
        "key.bodyoffset" : 229,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 220
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/YoutubeSearchResponse.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>VideoElement<\/decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Codable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 59,
        "key.line" : 14,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "VideoElement",
        "key.namelength" : 12,
        "key.nameoffset" : 206,
        "key.offset" : 199,
        "key.parsed_declaration" : "struct VideoElement: Codable",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 14,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let id: <Type usr=\"s:13Netflix_Clone14IdVideoElementV\">IdVideoElement<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/YoutubeSearchResponse.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>id<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone14IdVideoElementV\">IdVideoElement<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.line" : 15,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "id",
            "key.namelength" : 2,
            "key.nameoffset" : 238,
            "key.offset" : 234,
            "key.parsed_declaration" : "let id: IdVideoElement",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.typename" : "IdVideoElement",
            "key.typeusr" : "$s13Netflix_Clone14IdVideoElementVD",
            "key.usr" : "s:13Netflix_Clone12VideoElementV2idAA02IdcD0Vvp"
          }
        ],
        "key.typename" : "VideoElement.Type",
        "key.typeusr" : "$s13Netflix_Clone12VideoElementVmD",
        "key.usr" : "s:13Netflix_Clone12VideoElementV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct IdVideoElement : <Type usr=\"s:s7Codablea\">Codable<\/Type><\/Declaration>",
        "key.bodylength" : 46,
        "key.bodyoffset" : 291,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 282
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/YoutubeSearchResponse.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>IdVideoElement<\/decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Codable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 79,
        "key.line" : 17,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "IdVideoElement",
        "key.namelength" : 14,
        "key.nameoffset" : 266,
        "key.offset" : 259,
        "key.parsed_declaration" : "struct IdVideoElement: Codable",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 17,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let kind: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/YoutubeSearchResponse.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>kind<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.line" : 18,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "kind",
            "key.namelength" : 4,
            "key.nameoffset" : 300,
            "key.offset" : 296,
            "key.parsed_declaration" : "let kind: String",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone14IdVideoElementV4kindSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let videoId: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Models\/YoutubeSearchResponse.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>videoId<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 19,
            "key.line" : 19,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "videoId",
            "key.namelength" : 7,
            "key.nameoffset" : 321,
            "key.offset" : 317,
            "key.parsed_declaration" : "let videoId: String",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone14IdVideoElementV05videoC0SSvp"
          }
        ],
        "key.typename" : "IdVideoElement.Type",
        "key.typeusr" : "$s13Netflix_Clone14IdVideoElementVmD",
        "key.usr" : "s:13Netflix_Clone14IdVideoElementV"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Resources\/Extensions.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 274,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>@frozen struct String<\/Declaration>",
        "key.bodylength" : 137,
        "key.bodyoffset" : 135,
        "key.decl_lang" : "source.lang.swift",
        "key.doc.declaration" : "@frozen struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>@frozen struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and the accent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 156,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 127,
        "key.offset" : 117,
        "key.parsed_declaration" : "extension String",
        "key.parsed_scope.end" : 17,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func capitalizeFirstLetter() -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 80,
            "key.bodyoffset" : 185,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Resources\/Extensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>capitalizeFirstLetter<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 121,
            "key.line" : 13,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "capitalizeFirstLetter()",
            "key.namelength" : 23,
            "key.nameoffset" : 150,
            "key.offset" : 145,
            "key.parsed_declaration" : "func capitalizeFirstLetter() -> String",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 13,
            "key.substructure" : [

            ],
            "key.typename" : "(String) -> () -> String",
            "key.typeusr" : "$sSSycD",
            "key.usr" : "s:SS13Netflix_CloneE21capitalizeFirstLetterSSyF"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:SS"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/SceneDelegate.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2140,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class SceneDelegate : <Type usr=\"c:objc(cs)UIResponder\">UIResponder<\/Type>, <Type usr=\"c:objc(pl)UIWindowSceneDelegate\">UIWindowSceneDelegate<\/Type><\/Declaration>",
        "key.bodylength" : 1966,
        "key.bodyoffset" : 171,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 135
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 21,
            "key.offset" : 148
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/SceneDelegate.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>SceneDelegate<\/decl.name> : <ref.class usr=\"c:objc(cs)UIResponder\">UIResponder<\/ref.class>, <ref.protocol usr=\"c:objc(pl)UIWindowSceneDelegate\">UIWindowSceneDelegate<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UIResponder"
          },
          {
            "key.name" : "UIWindowSceneDelegate"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 2024,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "SceneDelegate",
        "key.namelength" : 13,
        "key.nameoffset" : 120,
        "key.offset" : 114,
        "key.parsed_declaration" : "class SceneDelegate: UIResponder, UIWindowSceneDelegate",
        "key.parsed_scope.end" : 54,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var window: <Type usr=\"c:objc(cs)UIWindow\">UIWindow<\/Type>?<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/SceneDelegate.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>window<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIWindow\">UIWindow<\/ref.class>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "window",
            "key.namelength" : 6,
            "key.nameoffset" : 181,
            "key.offset" : 177,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UIWindowSceneDelegate(py)window"
              }
            ],
            "key.parsed_declaration" : "var window: UIWindow?",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "UIWindow?",
            "key.typeusr" : "$sSo8UIWindowCSgD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SceneDelegate(py)window"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func scene(_ scene: <Type usr=\"c:objc(cs)UIScene\">UIScene<\/Type>, willConnectTo session: <Type usr=\"c:objc(cs)UISceneSession\">UISceneSession<\/Type>, options connectionOptions: <Type usr=\"c:objc(cs)UIScene\">UIScene<\/Type>.<Type usr=\"c:objc(cs)UISceneConnectionOptions\">ConnectionOptions<\/Type>)<\/Declaration>",
            "key.bodylength" : 294,
            "key.bodyoffset" : 328,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/SceneDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>scene<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scene<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIScene\">UIScene<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>willConnectTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>session<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UISceneSession\">UISceneSession<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options<\/decl.var.parameter.argument_label> <decl.var.parameter.name>connectionOptions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIScene\">UIScene<\/ref.class>.<ref.class usr=\"c:objc(cs)UISceneConnectionOptions\">ConnectionOptions<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 418,
            "key.line" : 15,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "scene(_:willConnectTo:options:)",
            "key.namelength" : 116,
            "key.nameoffset" : 210,
            "key.offset" : 205,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UISceneDelegate(im)scene:willConnectToSession:options:"
              }
            ],
            "key.parsed_declaration" : "func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions)",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [

            ],
            "key.typename" : "(SceneDelegate) -> (UIScene, UISceneSession, UIScene.ConnectionOptions) -> ()",
            "key.typeusr" : "$s_13willConnectTo7optionsySo7UISceneC_So0E7SessionCSo0E17ConnectionOptionsCtcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SceneDelegate(im)scene:willConnectToSession:options:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func sceneDidDisconnect(_ scene: <Type usr=\"c:objc(cs)UIScene\">UIScene<\/Type>)<\/Declaration>",
            "key.bodylength" : 431,
            "key.bodyoffset" : 672,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/SceneDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sceneDidDisconnect<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scene<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIScene\">UIScene<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 475,
            "key.line" : 25,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "sceneDidDisconnect(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 634,
            "key.offset" : 629,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UISceneDelegate(im)sceneDidDisconnect:"
              }
            ],
            "key.parsed_declaration" : "func sceneDidDisconnect(_ scene: UIScene)",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 25,
            "key.substructure" : [

            ],
            "key.typename" : "(SceneDelegate) -> (UIScene) -> ()",
            "key.typeusr" : "$syySo7UISceneCcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SceneDelegate(im)sceneDidDisconnect:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func sceneDidBecomeActive(_ scene: <Type usr=\"c:objc(cs)UIScene\">UIScene<\/Type>)<\/Declaration>",
            "key.bodylength" : 206,
            "key.bodyoffset" : 1155,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/SceneDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sceneDidBecomeActive<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scene<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIScene\">UIScene<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 252,
            "key.line" : 32,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "sceneDidBecomeActive(_:)",
            "key.namelength" : 38,
            "key.nameoffset" : 1115,
            "key.offset" : 1110,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UISceneDelegate(im)sceneDidBecomeActive:"
              }
            ],
            "key.parsed_declaration" : "func sceneDidBecomeActive(_ scene: UIScene)",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 32,
            "key.substructure" : [

            ],
            "key.typename" : "(SceneDelegate) -> (UIScene) -> ()",
            "key.typeusr" : "$syySo7UISceneCcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SceneDelegate(im)sceneDidBecomeActive:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func sceneWillResignActive(_ scene: <Type usr=\"c:objc(cs)UIScene\">UIScene<\/Type>)<\/Declaration>",
            "key.bodylength" : 178,
            "key.bodyoffset" : 1414,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/SceneDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sceneWillResignActive<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scene<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIScene\">UIScene<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 225,
            "key.line" : 37,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "sceneWillResignActive(_:)",
            "key.namelength" : 39,
            "key.nameoffset" : 1373,
            "key.offset" : 1368,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UISceneDelegate(im)sceneWillResignActive:"
              }
            ],
            "key.parsed_declaration" : "func sceneWillResignActive(_ scene: UIScene)",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 37,
            "key.substructure" : [

            ],
            "key.typename" : "(SceneDelegate) -> (UIScene) -> ()",
            "key.typeusr" : "$syySo7UISceneCcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SceneDelegate(im)sceneWillResignActive:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func sceneWillEnterForeground(_ scene: <Type usr=\"c:objc(cs)UIScene\">UIScene<\/Type>)<\/Declaration>",
            "key.bodylength" : 167,
            "key.bodyoffset" : 1648,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/SceneDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sceneWillEnterForeground<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scene<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIScene\">UIScene<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 217,
            "key.line" : 42,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "sceneWillEnterForeground(_:)",
            "key.namelength" : 42,
            "key.nameoffset" : 1604,
            "key.offset" : 1599,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UISceneDelegate(im)sceneWillEnterForeground:"
              }
            ],
            "key.parsed_declaration" : "func sceneWillEnterForeground(_ scene: UIScene)",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 42,
            "key.substructure" : [

            ],
            "key.typename" : "(SceneDelegate) -> (UIScene) -> ()",
            "key.typeusr" : "$syySo7UISceneCcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SceneDelegate(im)sceneWillEnterForeground:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func sceneDidEnterBackground(_ scene: <Type usr=\"c:objc(cs)UIScene\">UIScene<\/Type>)<\/Declaration>",
            "key.bodylength" : 263,
            "key.bodyoffset" : 1870,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/SceneDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sceneDidEnterBackground<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scene<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIScene\">UIScene<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 312,
            "key.line" : 47,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "sceneDidEnterBackground(_:)",
            "key.namelength" : 41,
            "key.nameoffset" : 1827,
            "key.offset" : 1822,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UISceneDelegate(im)sceneDidEnterBackground:"
              }
            ],
            "key.parsed_declaration" : "func sceneDidEnterBackground(_ scene: UIScene)",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 47,
            "key.substructure" : [

            ],
            "key.typename" : "(SceneDelegate) -> (UIScene) -> ()",
            "key.typeusr" : "$syySo7UISceneCcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)SceneDelegate(im)sceneDidEnterBackground:"
          }
        ],
        "key.typename" : "SceneDelegate.Type",
        "key.typeusr" : "$s13Netflix_Clone13SceneDelegateCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)SceneDelegate"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/ViewModels\/TitlePreviewViewModel.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 251,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct TitlePreviewViewModel<\/Declaration>",
        "key.bodylength" : 92,
        "key.bodyoffset" : 157,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/ViewModels\/TitlePreviewViewModel.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>TitlePreviewViewModel<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 123,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "TitlePreviewViewModel",
        "key.namelength" : 21,
        "key.nameoffset" : 134,
        "key.offset" : 127,
        "key.parsed_declaration" : "struct TitlePreviewViewModel",
        "key.parsed_scope.end" : 15,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let title: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/ViewModels\/TitlePreviewViewModel.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 17,
            "key.line" : 11,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "title",
            "key.namelength" : 5,
            "key.nameoffset" : 166,
            "key.offset" : 162,
            "key.parsed_declaration" : "let title: String",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone21TitlePreviewViewModelV5titleSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let youtubeView: <Type usr=\"s:13Netflix_Clone12VideoElementV\">VideoElement<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/ViewModels\/TitlePreviewViewModel.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>youtubeView<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone12VideoElementV\">VideoElement<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "youtubeView",
            "key.namelength" : 11,
            "key.nameoffset" : 188,
            "key.offset" : 184,
            "key.parsed_declaration" : "let youtubeView: VideoElement",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "VideoElement",
            "key.typeusr" : "$s13Netflix_Clone12VideoElementVD",
            "key.usr" : "s:13Netflix_Clone21TitlePreviewViewModelV07youtubeE0AA12VideoElementVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let titleOverview: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/ViewModels\/TitlePreviewViewModel.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>titleOverview<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.line" : 13,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titleOverview",
            "key.namelength" : 13,
            "key.nameoffset" : 222,
            "key.offset" : 218,
            "key.parsed_declaration" : "let titleOverview: String",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone21TitlePreviewViewModelV13titleOverviewSSvp"
          }
        ],
        "key.typename" : "TitlePreviewViewModel.Type",
        "key.typeusr" : "$s13Netflix_Clone21TitlePreviewViewModelVmD",
        "key.usr" : "s:13Netflix_Clone21TitlePreviewViewModelV"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/ViewModels\/TitleViewModel.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 202,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>struct TitleViewModel<\/Declaration>",
        "key.bodylength" : 58,
        "key.bodyoffset" : 142,
        "key.column" : 8,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/ViewModels\/TitleViewModel.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>TitleViewModel<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 81,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "TitleViewModel",
        "key.namelength" : 14,
        "key.nameoffset" : 127,
        "key.offset" : 120,
        "key.parsed_declaration" : "struct TitleViewModel",
        "key.parsed_scope.end" : 14,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let titleName: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/ViewModels\/TitleViewModel.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>titleName<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.line" : 11,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titleName",
            "key.namelength" : 9,
            "key.nameoffset" : 151,
            "key.offset" : 147,
            "key.parsed_declaration" : "let titleName: String",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone14TitleViewModelV9titleNameSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let posterURL: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/ViewModels\/TitleViewModel.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>posterURL<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "posterURL",
            "key.namelength" : 9,
            "key.nameoffset" : 177,
            "key.offset" : 173,
            "key.parsed_declaration" : "let posterURL: String",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone14TitleViewModelV9posterURLSSvp"
          }
        ],
        "key.typename" : "TitleViewModel.Type",
        "key.typeusr" : "$s13Netflix_Clone14TitleViewModelVmD",
        "key.usr" : "s:13Netflix_Clone14TitleViewModelV"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4798,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>protocol CollectionViewTableViewCellDelegate : AnyObject<\/Declaration>",
        "key.bodylength" : 115,
        "key.bodyoffset" : 182,
        "key.column" : 10,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 171
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>CollectionViewTableViewCellDelegate<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "AnyObject"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 173,
        "key.line" : 11,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "CollectionViewTableViewCellDelegate",
        "key.namelength" : 35,
        "key.nameoffset" : 134,
        "key.offset" : 125,
        "key.parsed_declaration" : "protocol CollectionViewTableViewCellDelegate: AnyObject",
        "key.parsed_scope.end" : 13,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func collectionViewTableViewCellDidTapCell(_ cell: <Type usr=\"c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell\">CollectionTableViewCell<\/Type>, viewModel: <Type usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectionViewTableViewCellDidTapCell<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>cell<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell\">CollectionTableViewCell<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>viewModel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:13Netflix_Clone21TitlePreviewViewModelV\">TitlePreviewViewModel<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 109,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionViewTableViewCellDidTapCell(_:viewModel:)",
            "key.namelength" : 104,
            "key.nameoffset" : 192,
            "key.offset" : 187,
            "key.parsed_declaration" : "func collectionViewTableViewCellDidTapCell(_ cell: CollectionTableViewCell, viewModel: TitlePreviewViewModel)",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : CollectionViewTableViewCellDelegate> (Self) -> (CollectionTableViewCell, TitlePreviewViewModel) -> ()",
            "key.typeusr" : "$s_9viewModely13Netflix_Clone23CollectionTableViewCellC_AB012TitlePreviewgB0VtcD",
            "key.usr" : "s:13Netflix_Clone019CollectionViewTableD12CellDelegateP010collectiondedf6DidTapF0_9viewModelyAA0cedF0C_AA012TitlePreviewdL0VtF"
          }
        ],
        "key.typename" : "CollectionViewTableViewCellDelegate.Protocol",
        "key.typeusr" : "$s13Netflix_Clone019CollectionViewTableD12CellDelegate_pmD",
        "key.usr" : "s:13Netflix_Clone019CollectionViewTableD12CellDelegateP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class CollectionTableViewCell : <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type><\/Declaration>",
        "key.bodylength" : 1982,
        "key.bodyoffset" : 348,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 331
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>CollectionTableViewCell<\/decl.name> : <ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UITableViewCell"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 2031,
        "key.line" : 15,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "CollectionTableViewCell",
        "key.namelength" : 23,
        "key.nameoffset" : 306,
        "key.offset" : 300,
        "key.parsed_declaration" : "class CollectionTableViewCell: UITableViewCell",
        "key.parsed_scope.end" : 74,
        "key.parsed_scope.start" : 15,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>weak var delegate: <Type usr=\"s:13Netflix_Clone019CollectionViewTableD12CellDelegateP\">CollectionViewTableViewCellDelegate<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.weak",
                "key.length" : 4,
                "key.offset" : 354
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>weak<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>delegate<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:13Netflix_Clone019CollectionViewTableD12CellDelegateP\">CollectionViewTableViewCellDelegate<\/ref.protocol>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.line" : 17,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "delegate",
            "key.namelength" : 8,
            "key.nameoffset" : 363,
            "key.offset" : 359,
            "key.parsed_declaration" : "weak var delegate: CollectionViewTableViewCellDelegate?",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "CollectionViewTableViewCellDelegate?",
            "key.typeusr" : "$s13Netflix_Clone019CollectionViewTableD12CellDelegate_pSgD",
            "key.usr" : "s:13Netflix_Clone23CollectionTableViewCellC8delegateAA0cedeF8Delegate_pSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let identifier: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 49,
            "key.line" : 19,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 429,
            "key.offset" : 418,
            "key.parsed_declaration" : "static let identifier = \"CollectionTableViewCell\"",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone23CollectionTableViewCellC10identifierSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var titles: [<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 477
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>titles<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.line" : 21,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titles",
            "key.namelength" : 6,
            "key.nameoffset" : 489,
            "key.offset" : 485,
            "key.parsed_declaration" : "private var titles: [Title] = []",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[Title]",
            "key.typeusr" : "$sSay13Netflix_Clone5TitleVGD",
            "key.usr" : "s:13Netflix_Clone23CollectionTableViewCellC6titles33_D880DDB34D8535B797419F9BF3190CC5LLSayAA5TitleVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let collectionView: <Type usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 519
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>collectionView<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 447,
            "key.line" : 23,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionView",
            "key.namelength" : 14,
            "key.nameoffset" : 531,
            "key.offset" : 527,
            "key.parsed_declaration" : "private let collectionView: UICollectionView = {\n    let layout = UICollectionViewFlowLayout()\n    layout.scrollDirection = .horizontal\n    layout.itemSize = CGSize(width: 140, height: 200)\n    let collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)\n    collectionView.register(TitleCollectionViewCell.self, forCellWithReuseIdentifier: TitleCollectionViewCell.identifier)\n    return collectionView\n}()",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:cellForItemAtIndexPath:\">collectionView(_:cellForItemAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:contextMenuConfigurationForItemAtIndexPath:point:\">collectionView(_:contextMenuConfigurationForItemAt:point:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:numberOfItemsInSection:\">collectionView(_:numberOfItemsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:didSelectItemAtIndexPath:\">collectionView(_:didSelectItemAt:)<\/RelatedName>"
              }
            ],
            "key.typename" : "UICollectionView",
            "key.typeusr" : "$sSo16UICollectionViewCD",
            "key.usr" : "s:13Netflix_Clone23CollectionTableViewCellC010collectionE033_D880DDB34D8535B797419F9BF3190CC5LLSo012UICollectionE0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override init(style: <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type>.<Type usr=\"c:@E@UITableViewCellStyle\">CellStyle<\/Type>, reuseIdentifier: <Type usr=\"s:SS\">String<\/Type>?)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 984
              }
            ],
            "key.bodylength" : 258,
            "key.bodyoffset" : 1059,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>style<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class>.<ref.enum usr=\"c:@E@UITableViewCellStyle\">CellStyle<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reuseIdentifier<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 325,
            "key.line" : 32,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "init(style:reuseIdentifier:)",
            "key.namelength" : 64,
            "key.nameoffset" : 993,
            "key.offset" : 993,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UITableViewCell(im)initWithStyle:reuseIdentifier:"
              }
            ],
            "key.parsed_declaration" : "override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)",
            "key.parsed_scope.end" : 39,
            "key.parsed_scope.start" : 32,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell(im)initWithCoder:\">init(coder:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)UIView(im)initWithFrame:\">init(frame:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(CollectionTableViewCell.Type) -> (UITableViewCell.CellStyle, String?) -> CollectionTableViewCell",
            "key.typeusr" : "$s5style15reuseIdentifier13Netflix_Clone23CollectionTableViewCellCSo07UITablehI5StyleV_SSSgtcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell(im)initWithStyle:reuseIdentifier:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>required init?(coder: <Type usr=\"c:objc(cs)NSCoder\">NSCoder<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.required",
                "key.length" : 8,
                "key.offset" : 1328
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 1360,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>required<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>coder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSCoder\">NSCoder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 50,
            "key.line" : 41,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "init(coder:)",
            "key.namelength" : 21,
            "key.nameoffset" : 1337,
            "key.offset" : 1337,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UITableViewCell(im)initWithCoder:"
              },
              {
                "key.usr" : "c:objc(pl)NSCoding(im)initWithCoder:"
              },
              {
                "key.usr" : "c:objc(cs)UIView(im)initWithCoder:"
              },
              {
                "key.usr" : "c:objc(pl)NSCoding(im)initWithCoder:"
              }
            ],
            "key.parsed_declaration" : "required init?(coder: NSCoder)",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 41,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell(im)initWithStyle:reuseIdentifier:\">init(style:reuseIdentifier:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)UIView(im)initWithFrame:\">init(frame:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(CollectionTableViewCell.Type) -> (NSCoder) -> CollectionTableViewCell?",
            "key.typeusr" : "$s5coder13Netflix_Clone23CollectionTableViewCellCSgSo7NSCoderC_tcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell(im)initWithCoder:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func layoutSubviews()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 1397
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 1429,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>layoutSubviews<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 119,
            "key.line" : 45,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "layoutSubviews()",
            "key.namelength" : 16,
            "key.nameoffset" : 1411,
            "key.offset" : 1406,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIView(im)layoutSubviews"
              }
            ],
            "key.parsed_declaration" : "override func layoutSubviews()",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 45,
            "key.substructure" : [

            ],
            "key.typename" : "(CollectionTableViewCell) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell(im)layoutSubviews"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func configure(with titles: [<Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type>])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1531
              }
            ],
            "key.bodylength" : 161,
            "key.bodyoffset" : 1575,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>configure<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>titles<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 199,
            "key.line" : 51,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "configure(with:)",
            "key.namelength" : 31,
            "key.nameoffset" : 1543,
            "key.offset" : 1538,
            "key.parsed_declaration" : "public func configure(with titles: [Title])",
            "key.parsed_scope.end" : 58,
            "key.parsed_scope.start" : 51,
            "key.substructure" : [

            ],
            "key.typename" : "(CollectionTableViewCell) -> ([Title]) -> ()",
            "key.typeusr" : "$s4withySay13Netflix_Clone5TitleVG_tcD",
            "key.usr" : "s:13Netflix_Clone23CollectionTableViewCellC9configure4withySayAA5TitleVG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func downloadAtIndex(indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1747
              }
            ],
            "key.bodylength" : 524,
            "key.bodyoffset" : 1799,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>downloadAtIndex<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>indexPath<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 569,
            "key.line" : 60,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "downloadAtIndex(indexPath:)",
            "key.namelength" : 37,
            "key.nameoffset" : 1760,
            "key.offset" : 1755,
            "key.parsed_declaration" : "private func downloadAtIndex(indexPath: IndexPath)",
            "key.parsed_scope.end" : 72,
            "key.parsed_scope.start" : 60,
            "key.substructure" : [

            ],
            "key.typename" : "(CollectionTableViewCell) -> (IndexPath) -> ()",
            "key.typeusr" : "$s9indexPathy10Foundation05IndexB0V_tcD",
            "key.usr" : "s:13Netflix_Clone23CollectionTableViewCellC15downloadAtIndex33_D880DDB34D8535B797419F9BF3190CC5LL9indexPathy10Foundation0iR0V_tF"
          }
        ],
        "key.typename" : "CollectionTableViewCell.Type",
        "key.typeusr" : "$s13Netflix_Clone23CollectionTableViewCellCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell"
      },
      {
        "key.annotated_decl" : "<Declaration>class CollectionTableViewCell : <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type><\/Declaration>",
        "key.bodylength" : 2373,
        "key.bodyoffset" : 2422,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 24,
            "key.offset" : 2368
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 26,
            "key.offset" : 2394
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>CollectionTableViewCell<\/decl.name> : <ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UICollectionViewDelegate"
          },
          {
            "key.name" : "UICollectionViewDataSource"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2463,
        "key.line" : 15,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "CollectionTableViewCell",
        "key.namelength" : 23,
        "key.nameoffset" : 2343,
        "key.offset" : 2333,
        "key.parsed_declaration" : "extension CollectionTableViewCell: UICollectionViewDelegate, UICollectionViewDataSource",
        "key.parsed_scope.end" : 128,
        "key.parsed_scope.start" : 76,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func collectionView(_ collectionView: <Type usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/Type>, cellForItemAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>) -&gt; <Type usr=\"c:objc(cs)UICollectionViewCell\">UICollectionViewCell<\/Type><\/Declaration>",
            "key.bodylength" : 360,
            "key.bodyoffset" : 2544,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectionView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collectionView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cellForItemAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UICollectionViewCell\">UICollectionViewCell<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 478,
            "key.line" : 77,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionView(_:cellForItemAt:)",
            "key.namelength" : 86,
            "key.nameoffset" : 2432,
            "key.offset" : 2427,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UICollectionViewDataSource(im)collectionView:cellForItemAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell",
            "key.parsed_scope.end" : 85,
            "key.parsed_scope.start" : 77,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:13Netflix_Clone23CollectionTableViewCellC010collectionE033_D880DDB34D8535B797419F9BF3190CC5LLSo012UICollectionE0Cvp\">collectionView<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:contextMenuConfigurationForItemAtIndexPath:point:\">collectionView(_:contextMenuConfigurationForItemAt:point:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:numberOfItemsInSection:\">collectionView(_:numberOfItemsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:didSelectItemAtIndexPath:\">collectionView(_:didSelectItemAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(CollectionTableViewCell) -> (UICollectionView, IndexPath) -> UICollectionViewCell",
            "key.typeusr" : "$s_13cellForItemAtSo20UICollectionViewCellCSo0eF0C_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:cellForItemAtIndexPath:"
          },
          {
            "key.annotated_decl" : "<Declaration>func collectionView(_ collectionView: <Type usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/Type>, contextMenuConfigurationForItemAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>, point: <Type usr=\"c:@S@CGPoint\">CGPoint<\/Type>) -&gt; <Type usr=\"c:objc(cs)UIContextMenuConfiguration\">UIContextMenuConfiguration<\/Type>?<\/Declaration>",
            "key.bodylength" : 529,
            "key.bodyoffset" : 3075,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectionView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collectionView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>contextMenuConfigurationForItemAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>point<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIContextMenuConfiguration\">UIContextMenuConfiguration<\/ref.class>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 690,
            "key.line" : 87,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionView(_:contextMenuConfigurationForItemAt:point:)",
            "key.namelength" : 122,
            "key.nameoffset" : 2920,
            "key.offset" : 2915,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UICollectionViewDelegate(im)collectionView:contextMenuConfigurationForItemAtIndexPath:point:"
              }
            ],
            "key.parsed_declaration" : "func collectionView(_ collectionView: UICollectionView, contextMenuConfigurationForItemAt indexPath: IndexPath, point: CGPoint) -> UIContextMenuConfiguration?",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 87,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:13Netflix_Clone23CollectionTableViewCellC010collectionE033_D880DDB34D8535B797419F9BF3190CC5LLSo012UICollectionE0Cvp\">collectionView<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:cellForItemAtIndexPath:\">collectionView(_:cellForItemAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:numberOfItemsInSection:\">collectionView(_:numberOfItemsInSection:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:didSelectItemAtIndexPath:\">collectionView(_:didSelectItemAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let config: <Type usr=\"c:objc(cs)UIContextMenuConfiguration\">UIContextMenuConfiguration<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>config<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIContextMenuConfiguration\">UIContextMenuConfiguration<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 493,
                "key.line" : 88,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "config",
                "key.namelength" : 6,
                "key.nameoffset" : 3088,
                "key.offset" : 3084,
                "key.parsed_declaration" : "let config = UIContextMenuConfiguration(identifier: nil, previewProvider: nil){[weak self] _ in\n    \n    let downloadAction = UIAction(title: \"Download\", subtitle: nil, image: nil, identifier: nil, discoverabilityTitle: nil, state: .off) { _ in\n        \n        self?.downloadAtIndex(indexPath: indexPath)\n    }\n    \n    return UIMenu(title: \"\", image: nil, identifier: nil, options: .displayInline, children: [downloadAction])\n}",
                "key.parsed_scope.end" : 88,
                "key.parsed_scope.start" : 88,
                "key.typename" : "UIContextMenuConfiguration",
                "key.typeusr" : "$sSo26UIContextMenuConfigurationCD",
                "key.usr" : "s:13Netflix_Clone23CollectionTableViewCellC010collectionE0_33contextMenuConfigurationForItemAt5pointSo09UIContextiJ0CSgSo012UICollectionE0C_10Foundation9IndexPathVSo7CGPointVtF6configL_AHvp"
              }
            ],
            "key.typename" : "(CollectionTableViewCell) -> (UICollectionView, IndexPath, CGPoint) -> UIContextMenuConfiguration?",
            "key.typeusr" : "$s_33contextMenuConfigurationForItemAt5pointSo09UIContextbC0CSgSo16UICollectionViewC_10Foundation9IndexPathVSo7CGPointVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:contextMenuConfigurationForItemAtIndexPath:point:"
          },
          {
            "key.annotated_decl" : "<Declaration>func collectionView(_ collectionView: <Type usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/Type>, numberOfItemsInSection section: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 33,
            "key.bodyoffset" : 3721,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectionView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collectionView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>numberOfItemsInSection<\/decl.var.parameter.argument_label> <decl.var.parameter.name>section<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 135,
            "key.line" : 101,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionView(_:numberOfItemsInSection:)",
            "key.namelength" : 87,
            "key.nameoffset" : 3625,
            "key.offset" : 3620,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UICollectionViewDataSource(im)collectionView:numberOfItemsInSection:"
              }
            ],
            "key.parsed_declaration" : "func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int",
            "key.parsed_scope.end" : 103,
            "key.parsed_scope.start" : 101,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:13Netflix_Clone23CollectionTableViewCellC010collectionE033_D880DDB34D8535B797419F9BF3190CC5LLSo012UICollectionE0Cvp\">collectionView<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:cellForItemAtIndexPath:\">collectionView(_:cellForItemAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:contextMenuConfigurationForItemAtIndexPath:point:\">collectionView(_:contextMenuConfigurationForItemAt:point:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:didSelectItemAtIndexPath:\">collectionView(_:didSelectItemAt:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(CollectionTableViewCell) -> (UICollectionView, Int) -> Int",
            "key.typeusr" : "$s_22numberOfItemsInSectionSiSo16UICollectionViewC_SitcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:numberOfItemsInSection:"
          },
          {
            "key.annotated_decl" : "<Declaration>func collectionView(_ collectionView: <Type usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/Type>, didSelectItemAt indexPath: <Type usr=\"s:10Foundation9IndexPathV\">IndexPath<\/Type>)<\/Declaration>",
            "key.bodylength" : 923,
            "key.bodyoffset" : 3860,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>collectionView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collectionView<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UICollectionView\">UICollectionView<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>didSelectItemAt<\/decl.var.parameter.argument_label> <decl.var.parameter.name>indexPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation9IndexPathV\">IndexPath<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1019,
            "key.line" : 105,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "collectionView(_:didSelectItemAt:)",
            "key.namelength" : 88,
            "key.nameoffset" : 3770,
            "key.offset" : 3765,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(pl)UICollectionViewDelegate(im)collectionView:didSelectItemAtIndexPath:"
              }
            ],
            "key.parsed_declaration" : "func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath)",
            "key.parsed_scope.end" : 125,
            "key.parsed_scope.start" : 105,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:13Netflix_Clone23CollectionTableViewCellC010collectionE033_D880DDB34D8535B797419F9BF3190CC5LLSo012UICollectionE0Cvp\">collectionView<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:cellForItemAtIndexPath:\">collectionView(_:cellForItemAt:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:contextMenuConfigurationForItemAtIndexPath:point:\">collectionView(_:contextMenuConfigurationForItemAt:point:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:numberOfItemsInSection:\">collectionView(_:numberOfItemsInSection:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let title: <Type usr=\"s:13Netflix_Clone5TitleV\">Title<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/CollectionTableViewCell.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:13Netflix_Clone5TitleV\">Title<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 108,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "title",
                "key.namelength" : 5,
                "key.nameoffset" : 3949,
                "key.offset" : 3945,
                "key.parsed_declaration" : "let title = titles[indexPath.row]",
                "key.parsed_scope.end" : 108,
                "key.parsed_scope.start" : 108,
                "key.typename" : "Title",
                "key.typeusr" : "$s13Netflix_Clone5TitleVD",
                "key.usr" : "s:13Netflix_Clone23CollectionTableViewCellC010collectionE0_15didSelectItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF5titleL_AA5TitleVvp"
              }
            ],
            "key.typename" : "(CollectionTableViewCell) -> (UICollectionView, IndexPath) -> ()",
            "key.typeusr" : "$s_15didSelectItemAtySo16UICollectionViewC_10Foundation9IndexPathVtcD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)CollectionTableViewCell(im)collectionView:didSelectItemAtIndexPath:"
          }
        ],
        "key.typename" : "CollectionTableViewCell.Type",
        "key.typeusr" : "$s13Netflix_Clone23CollectionTableViewCellCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)CollectionTableViewCell"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2961,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class HeroheaderUIView : <Type usr=\"c:objc(cs)UIView\">UIView<\/Type><\/Declaration>",
        "key.bodylength" : 2810,
        "key.bodyoffset" : 149,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 141
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>HeroheaderUIView<\/decl.name> : <ref.class usr=\"c:objc(cs)UIView\">UIView<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UIView"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 2843,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "HeroheaderUIView",
        "key.namelength" : 16,
        "key.nameoffset" : 123,
        "key.offset" : 117,
        "key.parsed_declaration" : "class HeroheaderUIView: UIView",
        "key.parsed_scope.end" : 106,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let downloadButton: <Type usr=\"c:objc(cs)UIButton\">UIButton<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 155
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>downloadButton<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIButton\">UIButton<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 359,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "downloadButton",
            "key.namelength" : 14,
            "key.nameoffset" : 167,
            "key.offset" : 163,
            "key.parsed_declaration" : "private let downloadButton: UIButton = {\n    \n    let button = UIButton()\n    button.setTitle(\"Download\", for: .normal)\n    button.layer.borderColor = UIColor.white.cgColor\n    button.layer.borderWidth = 1\n    button.translatesAutoresizingMaskIntoConstraints = false\n    button.layer.cornerRadius = 5\n    \n    return button\n}()",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "UIButton",
            "key.typeusr" : "$sSo8UIButtonCD",
            "key.usr" : "s:13Netflix_Clone16HeroheaderUIViewC14downloadButton33_04719B7F7564DDD3BFAB287038A5FD67LLSo8UIButtonCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let playButton: <Type usr=\"c:objc(cs)UIButton\">UIButton<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 537
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>playButton<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIButton\">UIButton<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 352,
            "key.line" : 25,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "playButton",
            "key.namelength" : 10,
            "key.nameoffset" : 549,
            "key.offset" : 545,
            "key.parsed_declaration" : "private let playButton: UIButton = {\n    let button = UIButton()\n    button.setTitle(\"Play\", for: .normal)\n    button.layer.borderColor = UIColor.white.cgColor\n    button.layer.borderWidth = 1\n    button.translatesAutoresizingMaskIntoConstraints = false\n    button.layer.cornerRadius = 5\n\n    \n    return button\n    \n}()",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.typename" : "UIButton",
            "key.typeusr" : "$sSo8UIButtonCD",
            "key.usr" : "s:13Netflix_Clone16HeroheaderUIViewC10playButton33_04719B7F7564DDD3BFAB287038A5FD67LLSo8UIButtonCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let heroImageView: <Type usr=\"c:objc(cs)UIImageView\">UIImageView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 907
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>heroImageView<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImageView\">UIImageView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 247,
            "key.line" : 38,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "heroImageView",
            "key.namelength" : 13,
            "key.nameoffset" : 919,
            "key.offset" : 915,
            "key.parsed_declaration" : "private let heroImageView: UIImageView = {\n    let imageView = UIImageView()\n    imageView.contentMode = .scaleAspectFill\n    imageView.clipsToBounds = true\n    imageView.image = UIImage(named: \"heroImage\")\n    return imageView\n}()",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.typename" : "UIImageView",
            "key.typeusr" : "$sSo11UIImageViewCD",
            "key.usr" : "s:13Netflix_Clone16HeroheaderUIViewC13heroImageView33_04719B7F7564DDD3BFAB287038A5FD67LLSo07UIImageG0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func addGradient()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1172
              }
            ],
            "key.bodylength" : 268,
            "key.bodyoffset" : 1200,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addGradient<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 289,
            "key.line" : 46,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "addGradient()",
            "key.namelength" : 13,
            "key.nameoffset" : 1185,
            "key.offset" : 1180,
            "key.parsed_declaration" : "private func addGradient()",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 46,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let gradientLayer: <Type usr=\"c:objc(cs)CAGradientLayer\">CAGradientLayer<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>gradientLayer<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CAGradientLayer\">CAGradientLayer<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 37,
                "key.line" : 48,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "gradientLayer",
                "key.namelength" : 13,
                "key.nameoffset" : 1222,
                "key.offset" : 1218,
                "key.parsed_declaration" : "let gradientLayer = CAGradientLayer()",
                "key.parsed_scope.end" : 48,
                "key.parsed_scope.start" : 48,
                "key.typename" : "CAGradientLayer",
                "key.typeusr" : "$sSo15CAGradientLayerCD",
                "key.usr" : "s:13Netflix_Clone16HeroheaderUIViewC11addGradient33_04719B7F7564DDD3BFAB287038A5FD67LLyyF13gradientLayerL_So010CAGradientN0Cvp"
              }
            ],
            "key.typename" : "(HeroheaderUIView) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone16HeroheaderUIViewC11addGradient33_04719B7F7564DDD3BFAB287038A5FD67LLyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func applyConstraints()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1479
              }
            ],
            "key.bodylength" : 777,
            "key.bodyoffset" : 1512,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>applyConstraints<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 803,
            "key.line" : 56,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "applyConstraints()",
            "key.namelength" : 18,
            "key.nameoffset" : 1492,
            "key.offset" : 1487,
            "key.parsed_declaration" : "private func applyConstraints()",
            "key.parsed_scope.end" : 76,
            "key.parsed_scope.start" : 56,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let playButtonConstraints: [<Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>playButtonConstraints<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 294,
                "key.line" : 58,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "playButtonConstraints",
                "key.namelength" : 21,
                "key.nameoffset" : 1534,
                "key.offset" : 1530,
                "key.parsed_declaration" : "let playButtonConstraints = [\n    playButton.leadingAnchor.constraint(equalTo: leadingAnchor, constant: 70),\n    playButton.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -50),\n    playButton.widthAnchor.constraint(equalToConstant: 120 )\n    \n]",
                "key.parsed_scope.end" : 58,
                "key.parsed_scope.start" : 58,
                "key.typename" : "[NSLayoutConstraint]",
                "key.typeusr" : "$sSaySo18NSLayoutConstraintCGD",
                "key.usr" : "s:13Netflix_Clone16HeroheaderUIViewC16applyConstraints33_04719B7F7564DDD3BFAB287038A5FD67LLyyF010playButtonF0L_SaySo18NSLayoutConstraintCGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let downloadButtonConstraints: [<Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>downloadButtonConstraints<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 301,
                "key.line" : 65,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "downloadButtonConstraints",
                "key.namelength" : 25,
                "key.nameoffset" : 1846,
                "key.offset" : 1842,
                "key.parsed_declaration" : "let downloadButtonConstraints = [\n    downloadButton.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -70),\n    downloadButton.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -50),\n    downloadButton.widthAnchor.constraint(equalToConstant: 120 )\n\n]",
                "key.parsed_scope.end" : 65,
                "key.parsed_scope.start" : 65,
                "key.typename" : "[NSLayoutConstraint]",
                "key.typeusr" : "$sSaySo18NSLayoutConstraintCGD",
                "key.usr" : "s:13Netflix_Clone16HeroheaderUIViewC16applyConstraints33_04719B7F7564DDD3BFAB287038A5FD67LLyyF014downloadButtonF0L_SaySo18NSLayoutConstraintCGvp"
              }
            ],
            "key.typename" : "(HeroheaderUIView) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone16HeroheaderUIViewC16applyConstraints33_04719B7F7564DDD3BFAB287038A5FD67LLyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func configure(with model: <Type usr=\"s:13Netflix_Clone14TitleViewModelV\">TitleViewModel<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2300
              }
            ],
            "key.bodylength" : 173,
            "key.bodyoffset" : 2350,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>configure<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>model<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:13Netflix_Clone14TitleViewModelV\">TitleViewModel<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 217,
            "key.line" : 78,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "configure(with:)",
            "key.namelength" : 37,
            "key.nameoffset" : 2312,
            "key.offset" : 2307,
            "key.parsed_declaration" : "public func configure(with model: TitleViewModel)",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 78,
            "key.substructure" : [

            ],
            "key.typename" : "(HeroheaderUIView) -> (TitleViewModel) -> ()",
            "key.typeusr" : "$s4withy13Netflix_Clone14TitleViewModelV_tcD",
            "key.usr" : "s:13Netflix_Clone16HeroheaderUIViewC9configure4withyAA14TitleViewModelV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override init(frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 2534
              }
            ],
            "key.bodylength" : 189,
            "key.bodyoffset" : 2564,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>frame<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 211,
            "key.line" : 84,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "init(frame:)",
            "key.namelength" : 19,
            "key.nameoffset" : 2543,
            "key.offset" : 2543,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIView(im)initWithFrame:"
              }
            ],
            "key.parsed_declaration" : "override init(frame: CGRect)",
            "key.parsed_scope.end" : 93,
            "key.parsed_scope.start" : 84,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)HeroheaderUIView(im)initWithCoder:\">init(coder:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HeroheaderUIView.Type) -> (CGRect) -> HeroheaderUIView",
            "key.typeusr" : "$s5frame13Netflix_Clone16HeroheaderUIViewCSo6CGRectV_tcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)HeroheaderUIView(im)initWithFrame:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>required init?(coder: <Type usr=\"c:objc(cs)NSCoder\">NSCoder<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.required",
                "key.length" : 8,
                "key.offset" : 2769
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 2801,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>required<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>coder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSCoder\">NSCoder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 50,
            "key.line" : 96,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "init(coder:)",
            "key.namelength" : 21,
            "key.nameoffset" : 2778,
            "key.offset" : 2778,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIView(im)initWithCoder:"
              },
              {
                "key.usr" : "c:objc(pl)NSCoding(im)initWithCoder:"
              }
            ],
            "key.parsed_declaration" : "required init?(coder: NSCoder)",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 96,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)HeroheaderUIView(im)initWithFrame:\">init(frame:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(HeroheaderUIView.Type) -> (NSCoder) -> HeroheaderUIView?",
            "key.typeusr" : "$s5coder13Netflix_Clone16HeroheaderUIViewCSgSo7NSCoderC_tcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)HeroheaderUIView(im)initWithCoder:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func layoutSubviews()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 2838
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 2870,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/HeroheaderUIView.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>layoutSubviews<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 106,
            "key.line" : 100,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "layoutSubviews()",
            "key.namelength" : 16,
            "key.nameoffset" : 2852,
            "key.offset" : 2847,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIView(im)layoutSubviews"
              }
            ],
            "key.parsed_declaration" : "override func layoutSubviews()",
            "key.parsed_scope.end" : 104,
            "key.parsed_scope.start" : 100,
            "key.substructure" : [

            ],
            "key.typename" : "(HeroheaderUIView) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)HeroheaderUIView(im)layoutSubviews"
          }
        ],
        "key.typename" : "HeroheaderUIView.Type",
        "key.typeusr" : "$s13Netflix_Clone16HeroheaderUIViewCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)HeroheaderUIView"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleCollectionViewCell.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1006,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class TitleCollectionViewCell : <Type usr=\"c:objc(cs)UICollectionViewCell\">UICollectionViewCell<\/Type><\/Declaration>",
        "key.bodylength" : 807,
        "key.bodyoffset" : 195,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 20,
            "key.offset" : 173
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleCollectionViewCell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TitleCollectionViewCell<\/decl.name> : <ref.class usr=\"c:objc(cs)UICollectionViewCell\">UICollectionViewCell<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UICollectionViewCell"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 861,
        "key.line" : 11,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "TitleCollectionViewCell",
        "key.namelength" : 23,
        "key.nameoffset" : 148,
        "key.offset" : 142,
        "key.parsed_declaration" : "class TitleCollectionViewCell: UICollectionViewCell",
        "key.parsed_scope.end" : 43,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let identifier: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleCollectionViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 49,
            "key.line" : 13,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 216,
            "key.offset" : 205,
            "key.parsed_declaration" : "static let identifier = \"TitleCollectionViewCell\"",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone23TitleCollectionViewCellC10identifierSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let posterImageView: <Type usr=\"c:objc(cs)UIImageView\">UIImageView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 264
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleCollectionViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>posterImageView<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImageView\">UIImageView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 156,
            "key.line" : 15,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "posterImageView",
            "key.namelength" : 15,
            "key.nameoffset" : 276,
            "key.offset" : 272,
            "key.parsed_declaration" : "private let posterImageView: UIImageView = {\n    let imageView = UIImageView()\n    imageView.contentMode = .scaleAspectFill\n    return imageView\n}()",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.typename" : "UIImageView",
            "key.typeusr" : "$sSo11UIImageViewCD",
            "key.usr" : "s:13Netflix_Clone23TitleCollectionViewCellC011posterImageE033_5C6344A30D2B14F1897A2124B9E9324BLLSo07UIImageE0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override init(frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 438
              }
            ],
            "key.bodylength" : 83,
            "key.bodyoffset" : 468,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleCollectionViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>frame<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 105,
            "key.line" : 21,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "init(frame:)",
            "key.namelength" : 19,
            "key.nameoffset" : 447,
            "key.offset" : 447,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIView(im)initWithFrame:"
              }
            ],
            "key.parsed_declaration" : "override init(frame: CGRect)",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 21,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)TitleCollectionViewCell(im)initWithCoder:\">init(coder:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(TitleCollectionViewCell.Type) -> (CGRect) -> TitleCollectionViewCell",
            "key.typeusr" : "$s5frame13Netflix_Clone23TitleCollectionViewCellCSo6CGRectV_tcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleCollectionViewCell(im)initWithFrame:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>required init?(coder: <Type usr=\"c:objc(cs)NSCoder\">NSCoder<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.required",
                "key.length" : 8,
                "key.offset" : 562
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 594,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleCollectionViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>required<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>coder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSCoder\">NSCoder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 50,
            "key.line" : 27,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "init(coder:)",
            "key.namelength" : 21,
            "key.nameoffset" : 571,
            "key.offset" : 571,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIView(im)initWithCoder:"
              },
              {
                "key.usr" : "c:objc(pl)NSCoding(im)initWithCoder:"
              }
            ],
            "key.parsed_declaration" : "required init?(coder: NSCoder)",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 27,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)TitleCollectionViewCell(im)initWithFrame:\">init(frame:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(TitleCollectionViewCell.Type) -> (NSCoder) -> TitleCollectionViewCell?",
            "key.typeusr" : "$s5coder13Netflix_Clone23TitleCollectionViewCellCSgSo7NSCoderC_tcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleCollectionViewCell(im)initWithCoder:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override func layoutSubviews()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 627
              }
            ],
            "key.bodylength" : 96,
            "key.bodyoffset" : 659,
            "key.column" : 19,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleCollectionViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>layoutSubviews<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 120,
            "key.line" : 31,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "layoutSubviews()",
            "key.namelength" : 16,
            "key.nameoffset" : 641,
            "key.offset" : 636,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UIView(im)layoutSubviews"
              }
            ],
            "key.parsed_declaration" : "override func layoutSubviews()",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 31,
            "key.substructure" : [

            ],
            "key.typename" : "(TitleCollectionViewCell) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleCollectionViewCell(im)layoutSubviews"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func configure(with model: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 766
              }
            ],
            "key.bodylength" : 187,
            "key.bodyoffset" : 808,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleCollectionViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>configure<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>model<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 223,
            "key.line" : 37,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "configure(with:)",
            "key.namelength" : 29,
            "key.nameoffset" : 778,
            "key.offset" : 773,
            "key.parsed_declaration" : "public func configure(with model: String)",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 37,
            "key.substructure" : [

            ],
            "key.typename" : "(TitleCollectionViewCell) -> (String) -> ()",
            "key.typeusr" : "$s4withySS_tcD",
            "key.usr" : "s:13Netflix_Clone23TitleCollectionViewCellC9configure4withySS_tF"
          }
        ],
        "key.typename" : "TitleCollectionViewCell.Type",
        "key.typeusr" : "$s13Netflix_Clone23TitleCollectionViewCellCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleCollectionViewCell"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3176,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class TitleTableViewCell : <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type><\/Declaration>",
        "key.bodylength" : 3011,
        "key.bodyoffset" : 162,
        "key.column" : 7,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 145
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TitleTableViewCell<\/decl.name> : <ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "UITableViewCell"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 3055,
        "key.line" : 10,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "TitleTableViewCell",
        "key.namelength" : 18,
        "key.nameoffset" : 125,
        "key.offset" : 119,
        "key.parsed_declaration" : "class TitleTableViewCell: UITableViewCell",
        "key.parsed_scope.end" : 80,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static let identifier: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 44,
            "key.line" : 12,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 178,
            "key.offset" : 167,
            "key.parsed_declaration" : "static let identifier = \"TitleTableViewCell\"",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:13Netflix_Clone18TitleTableViewCellC10identifierSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let playTitleButton: <Type usr=\"c:objc(cs)UIButton\">UIButton<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 221
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>playTitleButton<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIButton\">UIButton<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 357,
            "key.line" : 14,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "playTitleButton",
            "key.namelength" : 15,
            "key.nameoffset" : 233,
            "key.offset" : 229,
            "key.parsed_declaration" : "private let playTitleButton: UIButton = {\n    let button = UIButton()\n    button.translatesAutoresizingMaskIntoConstraints = false\n    let image = UIImage(systemName: \"play.circle\", withConfiguration: UIImage.SymbolConfiguration(pointSize: 30))\n    button.setImage(image, for: .normal)\n    button.tintColor = .white\n    return button\n}()",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.typename" : "UIButton",
            "key.typeusr" : "$sSo8UIButtonCD",
            "key.usr" : "s:13Netflix_Clone18TitleTableViewCellC04playC6Button33_80BECA79E83E615CE62D5D87F6C0B3C4LLSo8UIButtonCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let titleLabel: <Type usr=\"c:objc(cs)UILabel\">UILabel<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 591
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>titleLabel<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UILabel\">UILabel<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 240,
            "key.line" : 22,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titleLabel",
            "key.namelength" : 10,
            "key.nameoffset" : 603,
            "key.offset" : 599,
            "key.parsed_declaration" : "private let titleLabel: UILabel = {\n    let label = UILabel()\n    label.translatesAutoresizingMaskIntoConstraints = false\/\/to use content autolayout so this must be false\n    label.numberOfLines = 0\n    return label\n    \n}()",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.typename" : "UILabel",
            "key.typeusr" : "$sSo7UILabelCD",
            "key.usr" : "s:13Netflix_Clone18TitleTableViewCellC10titleLabel33_80BECA79E83E615CE62D5D87F6C0B3C4LLSo7UILabelCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let titlesPosterImageView: <Type usr=\"c:objc(cs)UIImageView\">UIImageView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 844
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>titlesPosterImageView<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImageView\">UIImageView<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 333,
            "key.line" : 29,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "titlesPosterImageView",
            "key.namelength" : 21,
            "key.nameoffset" : 856,
            "key.offset" : 852,
            "key.parsed_declaration" : "private let titlesPosterImageView: UIImageView = {\n    let imageView = UIImageView()\n    imageView.contentMode = .scaleAspectFill\n    imageView.translatesAutoresizingMaskIntoConstraints = false\n    imageView.clipsToBounds = true \/\/this will prevent each poster from overflowing from container\n    return imageView\n}()",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.typename" : "UIImageView",
            "key.typeusr" : "$sSo11UIImageViewCD",
            "key.usr" : "s:13Netflix_Clone18TitleTableViewCellC017titlesPosterImageE033_80BECA79E83E615CE62D5D87F6C0B3C4LLSo07UIImageE0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>override init(style: <Type usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/Type>.<Type usr=\"c:@E@UITableViewCellStyle\">CellStyle<\/Type>, reuseIdentifier: <Type usr=\"s:SS\">String<\/Type>?)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 1190
              }
            ],
            "key.bodylength" : 244,
            "key.bodyoffset" : 1265,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>style<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UITableViewCell\">UITableViewCell<\/ref.class>.<ref.enum usr=\"c:@E@UITableViewCellStyle\">CellStyle<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reuseIdentifier<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 311,
            "key.line" : 36,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "init(style:reuseIdentifier:)",
            "key.namelength" : 64,
            "key.nameoffset" : 1199,
            "key.offset" : 1199,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UITableViewCell(im)initWithStyle:reuseIdentifier:"
              }
            ],
            "key.parsed_declaration" : "override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 36,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)TitleTableViewCell(im)initWithCoder:\">init(coder:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)UIView(im)initWithFrame:\">init(frame:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(TitleTableViewCell.Type) -> (UITableViewCell.CellStyle, String?) -> TitleTableViewCell",
            "key.typeusr" : "$s5style15reuseIdentifier13Netflix_Clone18TitleTableViewCellCSo07UITablehI5StyleV_SSSgtcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleTableViewCell(im)initWithStyle:reuseIdentifier:"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func applyConstraints()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1520
              }
            ],
            "key.bodylength" : 1261,
            "key.bodyoffset" : 1552,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>applyConstraints<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1286,
            "key.line" : 44,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "applyConstraints()",
            "key.namelength" : 18,
            "key.nameoffset" : 1533,
            "key.offset" : 1528,
            "key.parsed_declaration" : "private func applyConstraints()",
            "key.parsed_scope.end" : 67,
            "key.parsed_scope.start" : 44,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let titlesPosterImageViewConstraints: [<Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>titlesPosterImageViewConstraints<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 424,
                "key.line" : 45,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "titlesPosterImageViewConstraints",
                "key.namelength" : 32,
                "key.nameoffset" : 1565,
                "key.offset" : 1561,
                "key.parsed_declaration" : "let titlesPosterImageViewConstraints = [ titlesPosterImageView.leadingAnchor.constraint(equalTo: contentView.leadingAnchor),\n    titlesPosterImageView.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 10),\n    titlesPosterImageView.bottomAnchor.constraint(equalTo: contentView.bottomAnchor, constant: -10),\n    titlesPosterImageView.widthAnchor.constraint(equalToConstant: 100)\n]",
                "key.parsed_scope.end" : 45,
                "key.parsed_scope.start" : 45,
                "key.typename" : "[NSLayoutConstraint]",
                "key.typeusr" : "$sSaySo18NSLayoutConstraintCGD",
                "key.usr" : "s:13Netflix_Clone18TitleTableViewCellC16applyConstraints33_80BECA79E83E615CE62D5D87F6C0B3C4LLyyF017titlesPosterImageeH0L_SaySo18NSLayoutConstraintCGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let titleLabelConstraints: [<Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>titleLabelConstraints<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 336,
                "key.line" : 51,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "titleLabelConstraints",
                "key.namelength" : 21,
                "key.nameoffset" : 2007,
                "key.offset" : 2003,
                "key.parsed_declaration" : "let titleLabelConstraints = [\n    titleLabel.leadingAnchor.constraint(equalTo: titlesPosterImageView.trailingAnchor, constant:  20),\n    titleLabel.centerYAnchor.constraint(equalTo: contentView.centerYAnchor),\n    titleLabel.trailingAnchor.constraint(equalTo: contentView.trailingAnchor, constant: -50)\n]",
                "key.parsed_scope.end" : 51,
                "key.parsed_scope.start" : 51,
                "key.typename" : "[NSLayoutConstraint]",
                "key.typeusr" : "$sSaySo18NSLayoutConstraintCGD",
                "key.usr" : "s:13Netflix_Clone18TitleTableViewCellC16applyConstraints33_80BECA79E83E615CE62D5D87F6C0B3C4LLyyF010titleLabelH0L_SaySo18NSLayoutConstraintCGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let playTitleButtonConstraints: [<Type usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>playTitleButtonConstraints<\/decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)NSLayoutConstraint\">NSLayoutConstraint<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 239,
                "key.line" : 57,
                "key.modulename" : "Netflix_Clone",
                "key.name" : "playTitleButtonConstraints",
                "key.namelength" : 26,
                "key.nameoffset" : 2361,
                "key.offset" : 2357,
                "key.parsed_declaration" : "let playTitleButtonConstraints = [\n    playTitleButton.trailingAnchor.constraint(equalTo: contentView.trailingAnchor,constant: -20),\n    playTitleButton.centerYAnchor.constraint(equalTo: contentView.centerYAnchor)\n]",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.typename" : "[NSLayoutConstraint]",
                "key.typeusr" : "$sSaySo18NSLayoutConstraintCGD",
                "key.usr" : "s:13Netflix_Clone18TitleTableViewCellC16applyConstraints33_80BECA79E83E615CE62D5D87F6C0B3C4LLyyF04playc6ButtonH0L_SaySo18NSLayoutConstraintCGvp"
              }
            ],
            "key.typename" : "(TitleTableViewCell) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:13Netflix_Clone18TitleTableViewCellC16applyConstraints33_80BECA79E83E615CE62D5D87F6C0B3C4LLyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func configure(with model: <Type usr=\"s:13Netflix_Clone14TitleViewModelV\">TitleViewModel<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2824
              }
            ],
            "key.bodylength" : 223,
            "key.bodyoffset" : 2874,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>configure<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>model<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:13Netflix_Clone14TitleViewModelV\">TitleViewModel<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 267,
            "key.line" : 69,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "configure(with:)",
            "key.namelength" : 37,
            "key.nameoffset" : 2836,
            "key.offset" : 2831,
            "key.parsed_declaration" : "public func configure(with model: TitleViewModel)",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 69,
            "key.substructure" : [

            ],
            "key.typename" : "(TitleTableViewCell) -> (TitleViewModel) -> ()",
            "key.typeusr" : "$s4withy13Netflix_Clone14TitleViewModelV_tcD",
            "key.usr" : "s:13Netflix_Clone18TitleTableViewCellC9configure4withyAA0cE5ModelV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>required init?(coder: <Type usr=\"c:objc(cs)NSCoder\">NSCoder<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.required",
                "key.length" : 8,
                "key.offset" : 3108
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 3140,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Documents\/Projects\/Netflix Clone\/Netflix Clone\/Views\/TitleTableViewCell.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>required<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>coder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSCoder\">NSCoder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 50,
            "key.line" : 76,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "init(coder:)",
            "key.namelength" : 21,
            "key.nameoffset" : 3117,
            "key.offset" : 3117,
            "key.overrides" : [
              {
                "key.usr" : "c:objc(cs)UITableViewCell(im)initWithCoder:"
              },
              {
                "key.usr" : "c:objc(pl)NSCoding(im)initWithCoder:"
              },
              {
                "key.usr" : "c:objc(cs)UIView(im)initWithCoder:"
              },
              {
                "key.usr" : "c:objc(pl)NSCoding(im)initWithCoder:"
              }
            ],
            "key.parsed_declaration" : "required init?(coder: NSCoder)",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 76,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@M@Netflix_Clone@objc(cs)TitleTableViewCell(im)initWithStyle:reuseIdentifier:\">init(style:reuseIdentifier:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)UIView(im)initWithFrame:\">init(frame:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(TitleTableViewCell.Type) -> (NSCoder) -> TitleTableViewCell?",
            "key.typeusr" : "$s5coder13Netflix_Clone18TitleTableViewCellCSgSo7NSCoderC_tcD",
            "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleTableViewCell(im)initWithCoder:"
          }
        ],
        "key.typename" : "TitleTableViewCell.Type",
        "key.typeusr" : "$s13Netflix_Clone18TitleTableViewCellCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleTableViewCell"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/NetflixCloneModel+CoreDataModel.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 212,
    "key.offset" : 0,
    "key.substructure" : [

    ]
  }
}, {
  "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataClass.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 265,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@objc(TitleItem) public class TitleItem : <Type usr=\"c:objc(cs)NSManagedObject\">NSManagedObject<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 220
          },
          {
            "key.attribute" : "source.decl.attribute.objc.name",
            "key.length" : 16,
            "key.offset" : 203
          }
        ],
        "key.bodylength" : 2,
        "key.bodyoffset" : 261,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 244
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataClass.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc<\/syntaxtype.attribute.name>(TitleItem)<\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TitleItem<\/decl.name> : <ref.class usr=\"c:objc(cs)NSManagedObject\">NSManagedObject<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "NSManagedObject"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 37,
        "key.line" : 14,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "TitleItem",
        "key.namelength" : 9,
        "key.nameoffset" : 233,
        "key.offset" : 227,
        "key.parsed_declaration" : "public class TitleItem: NSManagedObject",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 14,
        "key.runtime_name" : "TitleItem",
        "key.typename" : "TitleItem.Type",
        "key.typeusr" : "$s13Netflix_Clone9TitleItemCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleItem"
      }
    ]
  }
}, {
  "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 837,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>@objc(TitleItem) public class TitleItem : <Type usr=\"c:objc(cs)NSManagedObject\">NSManagedObject<\/Type><\/Declaration>",
        "key.bodylength" : 564,
        "key.bodyoffset" : 230,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataClass.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc<\/syntaxtype.attribute.name>(TitleItem)<\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TitleItem<\/decl.name> : <ref.class usr=\"c:objc(cs)NSManagedObject\">NSManagedObject<\/ref.class><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 586,
        "key.line" : 14,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "TitleItem",
        "key.namelength" : 9,
        "key.nameoffset" : 219,
        "key.offset" : 209,
        "key.parsed_declaration" : "extension TitleItem",
        "key.parsed_scope.end" : 30,
        "key.parsed_scope.start" : 14,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@nonobjc public class func fetchRequest() -&gt; <Type usr=\"c:objc(cs)NSFetchRequest\">NSFetchRequest<\/Type>&lt;<Type usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 245
              },
              {
                "key.attribute" : "source.decl.attribute.nonobjc",
                "key.length" : 8,
                "key.offset" : 236
              }
            ],
            "key.bodylength" : 71,
            "key.bodyoffset" : 308,
            "key.column" : 32,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.function.method.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@nonobjc<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fetchRequest<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSFetchRequest\">NSFetchRequest<\/ref.class>&lt;<ref.class usr=\"c:@M@Netflix_Clone@objc(cs)TitleItem\">TitleItem<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.class>",
            "key.kind" : "source.lang.swift.decl.function.method.class",
            "key.length" : 128,
            "key.line" : 16,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "fetchRequest()",
            "key.namelength" : 14,
            "key.nameoffset" : 263,
            "key.offset" : 252,
            "key.parsed_declaration" : "@nonobjc public class func fetchRequest() -> NSFetchRequest<TitleItem>",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 16,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"c:@CM@CoreData@@objc(cs)NSManagedObject(cm)fetchRequest\">fetchRequest() -&gt; NSFetchRequest&lt;NSFetchRequestResult&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(TitleItem.Type) -> () -> NSFetchRequest<TitleItem>",
            "key.typeusr" : "$sSo14NSFetchRequestCy13Netflix_Clone9TitleItemCGycD",
            "key.usr" : "s:13Netflix_Clone9TitleItemC12fetchRequestSo07NSFetchF0CyACGyFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@NSManaged public var id: <Type usr=\"s:s5Int64V\">Int64<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 397
              },
              {
                "key.attribute" : "source.decl.attribute.NSManaged",
                "key.length" : 10,
                "key.offset" : 386
              }
            ],
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.doc.declaration" : "var id: Self.ID { get }",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>id<\/Name><USR>s:s12IdentifiableP2id2IDQzvp<\/USR><Declaration>var id: Self.ID { get }<\/Declaration><CommentParts><Abstract><Para>The stable identity of the entity associated with this instance.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Identifiable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "id",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@NSManaged<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>id<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int64V\">Int64<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 13,
            "key.line" : 20,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "id",
            "key.namelength" : 2,
            "key.nameoffset" : 408,
            "key.offset" : 404,
            "key.overrides" : [
              {
                "key.usr" : "s:s12IdentifiableP2id2IDQzvp"
              }
            ],
            "key.parsed_declaration" : "@NSManaged public var id: Int64",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int64",
            "key.typeusr" : "$ss5Int64VD",
            "key.usr" : "s:s12IdentifiableP2id2IDQzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@NSManaged public var media_type: <Type usr=\"s:SS\">String<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 433
              },
              {
                "key.attribute" : "source.decl.attribute.NSManaged",
                "key.length" : 10,
                "key.offset" : 422
              }
            ],
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@NSManaged<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>media_type<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.line" : 21,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "media_type",
            "key.namelength" : 10,
            "key.nameoffset" : 444,
            "key.offset" : 440,
            "key.parsed_declaration" : "@NSManaged public var media_type: String?",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)TitleItem(py)media_type"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@NSManaged public var original_name: <Type usr=\"s:SS\">String<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 479
              },
              {
                "key.attribute" : "source.decl.attribute.NSManaged",
                "key.length" : 10,
                "key.offset" : 468
              }
            ],
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@NSManaged<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>original_name<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.line" : 22,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "original_name",
            "key.namelength" : 13,
            "key.nameoffset" : 490,
            "key.offset" : 486,
            "key.parsed_declaration" : "@NSManaged public var original_name: String?",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)TitleItem(py)original_name"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@NSManaged public var original_title: <Type usr=\"s:SS\">String<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 528
              },
              {
                "key.attribute" : "source.decl.attribute.NSManaged",
                "key.length" : 10,
                "key.offset" : 517
              }
            ],
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@NSManaged<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>original_title<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 23,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "original_title",
            "key.namelength" : 14,
            "key.nameoffset" : 539,
            "key.offset" : 535,
            "key.parsed_declaration" : "@NSManaged public var original_title: String?",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)TitleItem(py)original_title"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@NSManaged public var overview: <Type usr=\"s:SS\">String<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 578
              },
              {
                "key.attribute" : "source.decl.attribute.NSManaged",
                "key.length" : 10,
                "key.offset" : 567
              }
            ],
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@NSManaged<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>overview<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.line" : 24,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "overview",
            "key.namelength" : 8,
            "key.nameoffset" : 589,
            "key.offset" : 585,
            "key.parsed_declaration" : "@NSManaged public var overview: String?",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 24,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)TitleItem(py)overview"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@NSManaged public var poster_path: <Type usr=\"s:SS\">String<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 622
              },
              {
                "key.attribute" : "source.decl.attribute.NSManaged",
                "key.length" : 10,
                "key.offset" : 611
              }
            ],
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@NSManaged<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>poster_path<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.line" : 25,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "poster_path",
            "key.namelength" : 11,
            "key.nameoffset" : 633,
            "key.offset" : 629,
            "key.parsed_declaration" : "@NSManaged public var poster_path: String?",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)TitleItem(py)poster_path"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@NSManaged public var release_date: <Type usr=\"s:SS\">String<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 669
              },
              {
                "key.attribute" : "source.decl.attribute.NSManaged",
                "key.length" : 10,
                "key.offset" : 658
              }
            ],
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@NSManaged<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>release_date<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.line" : 26,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "release_date",
            "key.namelength" : 12,
            "key.nameoffset" : 680,
            "key.offset" : 676,
            "key.parsed_declaration" : "@NSManaged public var release_date: String?",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 26,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)TitleItem(py)release_date"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@NSManaged public var vote_average: <Type usr=\"s:Sd\">Double<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 717
              },
              {
                "key.attribute" : "source.decl.attribute.NSManaged",
                "key.length" : 10,
                "key.offset" : 706
              }
            ],
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@NSManaged<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>vote_average<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.line" : 27,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "vote_average",
            "key.namelength" : 12,
            "key.nameoffset" : 728,
            "key.offset" : 724,
            "key.parsed_declaration" : "@NSManaged public var vote_average: Double",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 27,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Double",
            "key.typeusr" : "$sSdD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)TitleItem(py)vote_average"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@NSManaged public var vote_count: <Type usr=\"s:s5Int64V\">Int64<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 764
              },
              {
                "key.attribute" : "source.decl.attribute.NSManaged",
                "key.length" : 10,
                "key.offset" : 753
              }
            ],
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataProperties.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@NSManaged<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>vote_count<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int64V\">Int64<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.line" : 28,
            "key.modulename" : "Netflix_Clone",
            "key.name" : "vote_count",
            "key.namelength" : 10,
            "key.nameoffset" : 775,
            "key.offset" : 771,
            "key.parsed_declaration" : "@NSManaged public var vote_count: Int64",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 28,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int64",
            "key.typeusr" : "$ss5Int64VD",
            "key.usr" : "c:@CM@Netflix_Clone@objc(cs)TitleItem(py)vote_count"
          }
        ],
        "key.typename" : "TitleItem.Type",
        "key.typeusr" : "$s13Netflix_Clone9TitleItemCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleItem"
      },
      {
        "key.annotated_decl" : "<Declaration>@objc(TitleItem) public class TitleItem : <Type usr=\"c:objc(cs)NSManagedObject\">NSManagedObject<\/Type><\/Declaration>",
        "key.bodylength" : 2,
        "key.bodyoffset" : 833,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 12,
            "key.offset" : 819
          }
        ],
        "key.filepath" : "\/Users\/vahid\/Library\/Developer\/Xcode\/DerivedData\/Netflix_Clone-blfwntpjiwzlyldtayvvoquoqjud\/Build\/Intermediates.noindex\/Netflix Clone.build\/Debug-iphoneos\/Netflix Clone.build\/DerivedSources\/CoreDataGenerated\/NetflixCloneModel\/TitleItem+CoreDataClass.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc<\/syntaxtype.attribute.name>(TitleItem)<\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>TitleItem<\/decl.name> : <ref.class usr=\"c:objc(cs)NSManagedObject\">NSManagedObject<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Identifiable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 39,
        "key.line" : 14,
        "key.modulename" : "Netflix_Clone",
        "key.name" : "TitleItem",
        "key.namelength" : 9,
        "key.nameoffset" : 807,
        "key.offset" : 797,
        "key.parsed_declaration" : "extension TitleItem : Identifiable",
        "key.parsed_scope.end" : 34,
        "key.parsed_scope.start" : 32,
        "key.typename" : "TitleItem.Type",
        "key.typeusr" : "$s13Netflix_Clone9TitleItemCmD",
        "key.usr" : "c:@M@Netflix_Clone@objc(cs)TitleItem"
      }
    ]
  }
}]
